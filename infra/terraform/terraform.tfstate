{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 14,
  "lineage": "6b5abec5-7970-427a-39e0-72a6caf0617f",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kafka",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kafka",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kafka",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "3.8.0",
                "chart": "kafka",
                "first_deployed": 1730055686,
                "last_deployed": 1730056746,
                "name": "kafka",
                "namespace": "default",
                "notes": "CHART NAME: kafka\nCHART VERSION: 30.1.6\nAPP VERSION: 3.8.0\n\n** Please be patient while the chart is being deployed **\n\nKafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:\n\n    kafka.default.svc.cluster.local\n\nEach Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:\n\n    kafka-controller-0.kafka-controller-headless.default.svc.cluster.local:9092\n    kafka-controller-1.kafka-controller-headless.default.svc.cluster.local:9092\n    kafka-controller-2.kafka-controller-headless.default.svc.cluster.local:9092\n\nThe CLIENT listener for Kafka client connections from within your cluster have been configured with the following security settings:\n    - SASL authentication\n\nTo connect a client to your Kafka, you need to create the 'client.properties' configuration files with the content below:\n\nsecurity.protocol=SASL_PLAINTEXT\nsasl.mechanism=SCRAM-SHA-256\nsasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \\\n    username=\"user1\" \\\n    password=\"$(kubectl get secret kafka-user-passwords --namespace default -o jsonpath='{.data.client-passwords}' | base64 -d | cut -d , -f 1)\";\n\nTo create a pod that you can use as a Kafka client run the following commands:\n\n    kubectl run kafka-client --restart='Never' --image docker.io/bitnami/kafka:3.8.0-debian-12-r5 --namespace default --command -- sleep infinity\n    kubectl cp --namespace default /path/to/client.properties kafka-client:/tmp/client.properties\n    kubectl exec --tty -i kafka-client --namespace default -- bash\n\n    PRODUCER:\n        kafka-console-producer.sh \\\n            --producer.config /tmp/client.properties \\\n            --bootstrap-server kafka.default.svc.cluster.local:9092 \\\n            --topic test\n\n    CONSUMER:\n        kafka-console-consumer.sh \\\n            --consumer.config /tmp/client.properties \\\n            --bootstrap-server kafka.default.svc.cluster.local:9092 \\\n            --topic test \\\n            --from-beginning\n\nWARNING: There are \"resources\" sections in the chart not set. Using \"resourcesPreset\" is not recommended for production. For production installations, please set the following values according to your workload needs:\n  - controller.resources\n  - provisioning.resources\n+info https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n",
                "revision": 3,
                "values": "{\"broker\":{\"affinity\":{},\"args\":[],\"automountServiceAccountToken\":false,\"autoscaling\":{\"hpa\":{\"enabled\":false,\"maxReplicas\":\"\",\"minReplicas\":\"\",\"targetCPU\":\"\",\"targetMemory\":\"\"},\"vpa\":{\"annotations\":{},\"controlledResources\":[],\"enabled\":false,\"maxAllowed\":{},\"minAllowed\":{},\"updatePolicy\":{\"updateMode\":\"Auto\"}}},\"command\":[],\"config\":\"\",\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":true,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1001,\"runAsNonRoot\":true,\"runAsUser\":1001,\"seLinuxOptions\":{}},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enableServiceLinks\":true,\"existingConfigmap\":\"\",\"existingSecretConfig\":\"\",\"extraConfig\":\"\",\"extraConfigYaml\":{},\"extraContainerPorts\":[],\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"heapOpts\":\"-Xmx1024m -Xms1024m\",\"hostAliases\":[],\"hostIPC\":false,\"hostNetwork\":false,\"initContainerResources\":{\"limits\":{},\"requests\":{}},\"initContainers\":[],\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"logPersistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":false,\"existingClaim\":\"\",\"mountPath\":\"/opt/bitnami/kafka/logs\",\"selector\":{},\"size\":\"8Gi\",\"storageClass\":\"\"},\"minId\":100,\"minReadySeconds\":0,\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"pdb\":{\"create\":true,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":true,\"existingClaim\":\"\",\"labels\":{},\"mountPath\":\"/bitnami/kafka\",\"selector\":{},\"size\":\"8Gi\",\"storageClass\":\"\"},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"Parallel\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"fsGroupChangePolicy\":\"Always\",\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"supplementalGroups\":[],\"sysctls\":[]},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"replicaCount\":0,\"resources\":{},\"resourcesPreset\":\"small\",\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"secretConfig\":\"\",\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":15,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"zookeeperMigrationMode\":false},\"brokerRackAssignment\":\"\",\"clusterDomain\":\"cluster.local\",\"commonAnnotations\":{},\"commonLabels\":{},\"config\":\"\",\"controller\":{\"affinity\":{},\"args\":[],\"automountServiceAccountToken\":false,\"autoscaling\":{\"hpa\":{\"enabled\":false,\"maxReplicas\":3,\"minReplicas\":2,\"targetCPU\":70,\"targetMemory\":80},\"vpa\":{\"annotations\":{},\"controlledResources\":[\"cpu\",\"memory\"],\"enabled\":false,\"maxAllowed\":{\"cpu\":1,\"memory\":\"2Gi\"},\"minAllowed\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"updatePolicy\":{\"updateMode\":\"Auto\"}}},\"command\":[],\"config\":\"\",\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":true,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1001,\"runAsNonRoot\":true,\"runAsUser\":1001,\"seLinuxOptions\":{}},\"controllerOnly\":false,\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enableServiceLinks\":true,\"existingConfigmap\":\"\",\"existingSecretConfig\":\"\",\"extraConfig\":\"\",\"extraConfigYaml\":{},\"extraContainerPorts\":[],\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"heapOpts\":\"-Xmx1024m -Xms1024m\",\"hostAliases\":[],\"hostIPC\":false,\"hostNetwork\":false,\"initContainerResources\":{\"limits\":{},\"requests\":{}},\"initContainers\":[],\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"logPersistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":false,\"existingClaim\":\"\",\"mountPath\":\"/opt/bitnami/kafka/logs\",\"selector\":{},\"size\":\"8Gi\",\"storageClass\":\"\"},\"minId\":0,\"minReadySeconds\":0,\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":true,\"existingClaim\":\"\",\"labels\":{},\"mountPath\":\"/bitnami/kafka\",\"selector\":{},\"size\":\"8Gi\",\"storageClass\":\"\"},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"Parallel\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"fsGroupChangePolicy\":\"Always\",\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"supplementalGroups\":[],\"sysctls\":[]},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"replicaCount\":3,\"resourcesPreset\":\"small\",\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"secretConfig\":\"\",\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":15,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"zookeeperMigrationMode\":false},\"diagnosticMode\":{\"args\":[\"infinity\"],\"command\":[\"sleep\"],\"enabled\":false},\"dnsConfig\":{},\"dnsPolicy\":\"\",\"existingConfigmap\":\"\",\"existingLog4jConfigMap\":\"\",\"existingSecretConfig\":\"\",\"externalAccess\":{\"autoDiscovery\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":true,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1001,\"runAsNonRoot\":true,\"runAsUser\":1001,\"seLinuxOptions\":{},\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"enabled\":false,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/kubectl\",\"tag\":\"1.31.1-debian-12-r2\"},\"resources\":{},\"resourcesPreset\":\"nano\"},\"broker\":{\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"domain\":\"\",\"externalIPs\":[],\"extraPorts\":[],\"labels\":{},\"loadBalancerAnnotations\":[],\"loadBalancerClass\":\"\",\"loadBalancerIPs\":[],\"loadBalancerNames\":[],\"loadBalancerSourceRanges\":[],\"nodePorts\":[],\"ports\":{\"external\":9094},\"publishNotReadyAddresses\":false,\"type\":\"LoadBalancer\",\"useHostIPs\":false,\"usePodIPs\":false}},\"controller\":{\"forceExpose\":false,\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"domain\":\"\",\"externalIPs\":[],\"extraPorts\":[],\"labels\":{},\"loadBalancerAnnotations\":[],\"loadBalancerClass\":\"\",\"loadBalancerIPs\":[],\"loadBalancerNames\":[],\"loadBalancerSourceRanges\":[],\"nodePorts\":[],\"ports\":{\"external\":9094},\"publishNotReadyAddresses\":false,\"type\":\"LoadBalancer\",\"useHostIPs\":false,\"usePodIPs\":false}},\"enabled\":false},\"externalZookeeper\":{\"servers\":[]},\"extraConfig\":\"\",\"extraConfigYaml\":{},\"extraDeploy\":[],\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraInit\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":\"\",\"global\":{\"compatibility\":{\"openshift\":{\"adaptSecurityContext\":\"auto\"}},\"defaultStorageClass\":\"\",\"imagePullSecrets\":[],\"imageRegistry\":\"\",\"storageClass\":\"\"},\"heapOpts\":\"-XX:InitialRAMPercentage=75 -XX:MaxRAMPercentage=75\",\"image\":{\"debug\":false,\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/kafka\",\"tag\":\"3.8.0-debian-12-r5\"},\"initContainers\":[],\"interBrokerProtocolVersion\":\"\",\"kraft\":{\"clusterId\":\"\",\"controllerQuorumVoters\":\"\",\"enabled\":true,\"existingClusterIdSecret\":\"\"},\"kubeVersion\":\"\",\"listeners\":{\"advertisedListeners\":\"\",\"client\":{\"containerPort\":9092,\"name\":\"CLIENT\",\"protocol\":\"SASL_PLAINTEXT\",\"sslClientAuth\":\"\"},\"controller\":{\"containerPort\":9093,\"name\":\"CONTROLLER\",\"protocol\":\"SASL_PLAINTEXT\",\"sslClientAuth\":\"\"},\"external\":{\"containerPort\":9095,\"name\":\"EXTERNAL\",\"protocol\":\"SASL_PLAINTEXT\",\"sslClientAuth\":\"\"},\"extraListeners\":[],\"interbroker\":{\"containerPort\":9094,\"name\":\"INTERNAL\",\"protocol\":\"SASL_PLAINTEXT\",\"sslClientAuth\":\"\"},\"overrideListeners\":\"\",\"securityProtocolMap\":\"\"},\"log4j\":\"\",\"metrics\":{\"jmx\":{\"config\":\"jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:{{ .Values.metrics.jmx.kafkaJmxPort }}/jmxrmi\\nlowercaseOutputName: true\\nlowercaseOutputLabelNames: true\\nssl: false\\n{{- if .Values.metrics.jmx.whitelistObjectNames }}\\nwhitelistObjectNames: [\\\"{{ join \\\"\\\\\\\",\\\\\\\"\\\" .Values.metrics.jmx.whitelistObjectNames }}\\\"]\\n{{- end }}\",\"containerPorts\":{\"metrics\":5556},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":true,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1001,\"runAsNonRoot\":true,\"runAsUser\":1001,\"seLinuxOptions\":{}},\"enabled\":false,\"existingConfigmap\":\"\",\"extraRules\":\"\",\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/jmx-exporter\",\"tag\":\"1.0.1-debian-12-r6\"},\"kafkaJmxPort\":5555,\"resources\":{},\"resourcesPreset\":\"micro\",\"service\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"{{ .Values.metrics.jmx.service.ports.metrics }}\",\"prometheus.io/scrape\":\"true\"},\"clusterIP\":\"\",\"ports\":{\"metrics\":5556},\"sessionAffinity\":\"None\"},\"whitelistObjectNames\":[\"kafka.controller:*\",\"kafka.server:*\",\"java.lang:*\",\"kafka.network:*\",\"kafka.log:*\"]},\"prometheusRule\":{\"enabled\":false,\"groups\":[],\"labels\":{},\"namespace\":\"\"},\"serviceMonitor\":{\"enabled\":false,\"honorLabels\":false,\"interval\":\"\",\"jobLabel\":\"\",\"labels\":{},\"metricRelabelings\":[],\"namespace\":\"\",\"path\":\"/metrics\",\"relabelings\":[],\"scrapeTimeout\":\"\",\"selector\":{}}},\"nameOverride\":\"\",\"networkPolicy\":{\"addExternalClientAccess\":true,\"allowExternal\":true,\"allowExternalEgress\":true,\"enabled\":true,\"extraEgress\":[],\"extraIngress\":[],\"ingressNSMatchLabels\":{},\"ingressNSPodMatchLabels\":{},\"ingressPodMatchLabels\":{}},\"provisioning\":{\"args\":[],\"auth\":{\"tls\":{\"caCert\":\"ca.crt\",\"cert\":\"tls.crt\",\"certificatesSecret\":\"\",\"key\":\"tls.key\",\"keyPassword\":\"\",\"keyPasswordSecretKey\":\"key-password\",\"keystore\":\"keystore.jks\",\"keystorePassword\":\"\",\"keystorePasswordSecretKey\":\"keystore-password\",\"passwordsSecret\":\"\",\"truststore\":\"truststore.jks\",\"truststorePassword\":\"\",\"truststorePasswordSecretKey\":\"truststore-password\",\"type\":\"jks\"}},\"automountServiceAccountToken\":false,\"command\":[],\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":true,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1001,\"runAsNonRoot\":true,\"runAsUser\":1001,\"seLinuxOptions\":{}},\"enableServiceLinks\":true,\"enabled\":true,\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraProvisioningCommands\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"initContainers\":[],\"nodeSelector\":{},\"numPartitions\":1,\"parallel\":1,\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"fsGroupChangePolicy\":\"Always\",\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"supplementalGroups\":[],\"sysctls\":[]},\"postScript\":\"\",\"preScript\":\"\",\"replicationFactor\":1,\"resources\":{},\"resourcesPreset\":\"micro\",\"schedulerName\":\"\",\"serviceAccount\":{\"automountServiceAccountToken\":false,\"create\":true,\"name\":\"\"},\"sidecars\":[],\"tolerations\":[],\"topics\":[{\"name\":\"posts\",\"partitions\":1,\"replicationFactor\":1},{\"name\":\"blogs\",\"partitions\":1,\"replicationFactor\":1}],\"useHelmHooks\":true,\"waitForKafka\":true},\"rbac\":{\"create\":false},\"sasl\":{\"client\":{\"passwords\":\"\",\"users\":[\"user1\"]},\"controller\":{\"clientId\":\"controller_broker_client\",\"clientSecret\":\"\",\"password\":\"\",\"user\":\"controller_user\"},\"controllerMechanism\":\"PLAIN\",\"enabledMechanisms\":\"PLAIN,SCRAM-SHA-256,SCRAM-SHA-512\",\"existingSecret\":\"\",\"interBrokerMechanism\":\"PLAIN\",\"interbroker\":{\"clientId\":\"inter_broker_client\",\"clientSecret\":\"\",\"password\":\"\",\"user\":\"inter_broker_user\"},\"oauthbearer\":{\"expectedAudience\":\"\",\"jwksEndpointUrl\":\"\",\"subClaimName\":\"sub\",\"tokenEndpointUrl\":\"\"},\"zookeeper\":{\"password\":\"\",\"user\":\"\"}},\"secretConfig\":\"\",\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"clusterIP\":\"\",\"externalTrafficPolicy\":\"Cluster\",\"extraPorts\":[],\"headless\":{\"broker\":{\"annotations\":{},\"labels\":{}},\"controller\":{\"annotations\":{},\"labels\":{}}},\"loadBalancerClass\":\"\",\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nodePorts\":{\"client\":\"\",\"external\":\"\"},\"ports\":{\"client\":9092,\"controller\":9093,\"external\":9095,\"interbroker\":9094},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":false,\"create\":true,\"name\":\"\"},\"serviceBindings\":{\"enabled\":false},\"sidecars\":[],\"tls\":{\"autoGenerated\":false,\"customAltNames\":[],\"endpointIdentificationAlgorithm\":\"https\",\"existingSecret\":\"\",\"jksKeystoreKey\":\"\",\"jksTruststoreKey\":\"\",\"jksTruststoreSecret\":\"\",\"keyPassword\":\"\",\"keystorePassword\":\"\",\"passwordsSecret\":\"\",\"passwordsSecretKeystoreKey\":\"keystore-password\",\"passwordsSecretPemPasswordKey\":\"\",\"passwordsSecretTruststoreKey\":\"truststore-password\",\"pemChainIncluded\":false,\"sslClientAuth\":\"required\",\"truststorePassword\":\"\",\"type\":\"JKS\",\"zookeeper\":{\"enabled\":true,\"existingSecret\":\"\",\"existingSecretKeystoreKey\":\"zookeeper.keystore.jks\",\"existingSecretTruststoreKey\":\"zookeeper.truststore.jks\",\"keystorePassword\":\"\",\"passwordsSecret\":\"\",\"passwordsSecretKeystoreKey\":\"keystore-password\",\"passwordsSecretTruststoreKey\":\"truststore-password\",\"truststorePassword\":\"\",\"verifyHostname\":true}},\"volumePermissions\":{\"containerSecurityContext\":{\"runAsUser\":0,\"seLinuxOptions\":{}},\"enabled\":false,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/os-shell\",\"tag\":\"12-debian-12-r30\"},\"resources\":{},\"resourcesPreset\":\"nano\"},\"zookeeper\":{\"auth\":{\"client\":{\"clientPassword\":\"\",\"clientUser\":\"\",\"enabled\":false,\"serverPasswords\":\"\",\"serverUsers\":\"\"}},\"enabled\":false,\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":true,\"size\":\"8Gi\",\"storageClass\":\"\"},\"replicaCount\":2},\"zookeeperChrootPath\":\"\"}",
                "version": "30.1.6"
              }
            ],
            "name": "kafka",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://registry-1.docker.io/bitnamicharts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "upgrade_install": null,
            "values": [
              "# Copyright Broadcom, Inc. All Rights Reserved.\n# SPDX-License-Identifier: APACHE-2.0\n\n## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies, configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass\n##\n\n## @param global.imageRegistry Global Docker image registry\n## @param global.imagePullSecrets Global Docker registry secret names as an array\n## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)\n## @param global.storageClass DEPRECATED: use global.defaultStorageClass instead\n##\nglobal:\n  imageRegistry: \"\"\n  ## E.g.\n  ## imagePullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  imagePullSecrets: []\n  defaultStorageClass: \"\"\n  storageClass: \"\"\n  ## Compatibility adaptations for Kubernetes platforms\n  ##\n  compatibility:\n    ## Compatibility adaptations for Openshift\n    ##\n    openshift:\n      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)\n      ##\n      adaptSecurityContext: auto\n## @section Common parameters\n##\n\n## @param kubeVersion Override Kubernetes version\n##\nkubeVersion: \"\"\n## @param nameOverride String to partially override common.names.fullname\n##\nnameOverride: \"\"\n## @param fullnameOverride String to fully override common.names.fullname\n##\nfullnameOverride: \"\"\n## @param clusterDomain Default Kubernetes cluster domain\n##\nclusterDomain: cluster.local\n## @param commonLabels Labels to add to all deployed objects\n##\ncommonLabels: {}\n## @param commonAnnotations Annotations to add to all deployed objects\n##\ncommonAnnotations: {}\n## @param extraDeploy Array of extra objects to deploy with the release\n##\nextraDeploy: []\n## @param serviceBindings.enabled Create secret for service binding (Experimental)\n## Ref: https://servicebinding.io/service-provider/\n##\nserviceBindings:\n  enabled: false\n## Enable diagnostic mode in the statefulset\n##\ndiagnosticMode:\n  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)\n  ##\n  enabled: false\n  ## @param diagnosticMode.command Command to override all containers in the statefulset\n  ##\n  command:\n    - sleep\n  ## @param diagnosticMode.args Args to override all containers in the statefulset\n  ##\n  args:\n    - infinity\n## @section Kafka parameters\n##\n\n## Bitnami Kafka image version\n## ref: https://hub.docker.com/r/bitnami/kafka/tags/\n## @param image.registry [default: REGISTRY_NAME] Kafka image registry\n## @param image.repository [default: REPOSITORY_NAME/kafka] Kafka image repository\n## @skip image.tag Kafka image tag (immutable tags are recommended)\n## @param image.digest Kafka image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n## @param image.pullPolicy Kafka image pull policy\n## @param image.pullSecrets Specify docker-registry secret names as an array\n## @param image.debug Specify if debug values should be set\n##\nimage:\n  registry: docker.io\n  repository: bitnami/kafka\n  tag: 3.8.0-debian-12-r5\n  digest: \"\"\n  ## Specify a imagePullPolicy\n  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images\n  ##\n  pullPolicy: IfNotPresent\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ## e.g:\n  ## pullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  pullSecrets: []\n  ## Set to true if you would like to see extra information on logs\n  ##\n  debug: false\n## @param extraInit Additional content for the kafka init script, rendered as a template.\n##\nextraInit: \"\"\n## @param config Configuration file for Kafka, rendered as a template. Auto-generated based on chart values when not specified.\n## @param existingConfigmap ConfigMap with Kafka Configuration\n## NOTE: This will override the configuration based on values, please act carefully\n## If both are set, the existingConfigMap will be used.\n##\nconfig: \"\"\nexistingConfigmap: \"\"\n## @param extraConfig Additional configuration to be appended at the end of the generated Kafka configuration file.\n##\nextraConfig: \"\"\n## @param extraConfigYaml Additional configuration in yaml format to be appended at the end of the generated Kafka configuration file.\n##\n## E.g.\n## extraConfigYaml:\n##   default.replication.factor: 3\n##\nextraConfigYaml: {}\n## @param secretConfig Additional configuration to be appended at the end of the generated Kafka configuration file.\n## This value will be stored in a secret.\n##\nsecretConfig: \"\"\n## @param existingSecretConfig Secret with additonal configuration that will be appended to the end of the generated Kafka configuration file\n## The key for the configuration should be: server-secret.properties\n## NOTE: This will override secretConfig value\n##\nexistingSecretConfig: \"\"\n## @param log4j An optional log4j.properties file to overwrite the default of the Kafka brokers\n## An optional log4j.properties file to overwrite the default of the Kafka brokers\n## ref: https://github.com/apache/kafka/blob/trunk/config/log4j.properties\n##\nlog4j: \"\"\n## @param existingLog4jConfigMap The name of an existing ConfigMap containing a log4j.properties file\n## The name of an existing ConfigMap containing a log4j.properties file\n## NOTE: this will override `log4j`\n##\nexistingLog4jConfigMap: \"\"\n## @param heapOpts Kafka Java Heap configuration\n##\nheapOpts: -XX:InitialRAMPercentage=75 -XX:MaxRAMPercentage=75\n## @param brokerRackAssignment Set Broker Assignment for multi tenant environment Allowed values: `aws-az`\n## ref: https://cwiki.apache.org/confluence/display/KAFKA/KIP-392%3A+Allow+consumers+to+fetch+from+closest+replica\n##\nbrokerRackAssignment: \"\"\n## @param interBrokerProtocolVersion Override the setting 'inter.broker.protocol.version' during the ZK migration.\n## Ref. https://docs.confluent.io/platform/current/installation/migrate-zk-kraft.html\n##\ninterBrokerProtocolVersion: \"\"\n## Kafka listeners configuration\n##\nlisteners:\n  ## @param listeners.client.name Name for the Kafka client listener\n  ## @param listeners.client.containerPort Port for the Kafka client listener\n  ## @param listeners.client.protocol Security protocol for the Kafka client listener. Allowed values are 'PLAINTEXT', 'SASL_PLAINTEXT', 'SASL_SSL' and 'SSL'\n  ## @param listeners.client.sslClientAuth Optional. If SASL_SSL is enabled, configure mTLS TLS authentication type. If SSL protocol is enabled, overrides tls.authType for this listener. Allowed values are 'none', 'requested' and 'required'\n  client:\n    containerPort: 9092\n    protocol: SASL_PLAINTEXT\n    name: CLIENT\n    sslClientAuth: \"\"\n  ## @param listeners.controller.name Name for the Kafka controller listener\n  ## @param listeners.controller.containerPort Port for the Kafka controller listener\n  ## @param listeners.controller.protocol Security protocol for the Kafka controller listener. Allowed values are 'PLAINTEXT', 'SASL_PLAINTEXT', 'SASL_SSL' and 'SSL'\n  ## @param listeners.controller.sslClientAuth Optional. If SASL_SSL is enabled, configure mTLS TLS authentication type. If SSL protocol is enabled, overrides tls.authType for this listener. Allowed values are 'none', 'requested' and 'required'\n  ## Ref: https://cwiki.apache.org/confluence/display/KAFKA/KIP-684+-+Support+mutual+TLS+authentication+on+SASL_SSL+listeners\n  controller:\n    name: CONTROLLER\n    containerPort: 9093\n    protocol: SASL_PLAINTEXT\n    sslClientAuth: \"\"\n  ## @param listeners.interbroker.name Name for the Kafka inter-broker listener\n  ## @param listeners.interbroker.containerPort Port for the Kafka inter-broker listener\n  ## @param listeners.interbroker.protocol Security protocol for the Kafka inter-broker listener. Allowed values are 'PLAINTEXT', 'SASL_PLAINTEXT', 'SASL_SSL' and 'SSL'\n  ## @param listeners.interbroker.sslClientAuth Optional. If SASL_SSL is enabled, configure mTLS TLS authentication type. If SSL protocol is enabled, overrides tls.authType for this listener. Allowed values are 'none', 'requested' and 'required'\n  interbroker:\n    containerPort: 9094\n    protocol: SASL_PLAINTEXT\n    name: INTERNAL\n    sslClientAuth: \"\"\n  ## @param listeners.external.containerPort Port for the Kafka external listener\n  ## @param listeners.external.protocol Security protocol for the Kafka external listener. . Allowed values are 'PLAINTEXT', 'SASL_PLAINTEXT', 'SASL_SSL' and 'SSL'\n  ## @param listeners.external.name Name for the Kafka external listener\n  ## @param listeners.external.sslClientAuth Optional. If SASL_SSL is enabled, configure mTLS TLS authentication type. If SSL protocol is enabled, overrides tls.sslClientAuth for this listener. Allowed values are 'none', 'requested' and 'required'\n  external:\n    containerPort: 9095\n    protocol: SASL_PLAINTEXT\n    name: EXTERNAL\n    sslClientAuth: \"\"\n  ## @param listeners.extraListeners Array of listener objects to be appended to already existing listeners\n  ## E.g.\n  ## extraListeners:\n  ##  - name: CUSTOM\n  ##    containerPort: 9097\n  ##    protocol: SASL_PLAINTEXT\n  ##    sslClientAuth: \"\"\n  ##\n  extraListeners: []\n  ## NOTE: If set, below values will override configuration set using the above values (extraListeners.*, controller.*, interbroker.*, client.* and external.*)\n  ## @param listeners.overrideListeners Overrides the Kafka 'listeners' configuration setting.\n  ## @param listeners.advertisedListeners Overrides the Kafka 'advertised.listener' configuration setting.\n  ## @param listeners.securityProtocolMap Overrides the Kafka 'security.protocol.map' configuration setting.\n  overrideListeners: \"\"\n  advertisedListeners: \"\"\n  securityProtocolMap: \"\"\n## @section Kafka SASL parameters\n## Kafka SASL settings for authentication, required if SASL_PLAINTEXT or SASL_SSL listeners are configured\n##\nsasl:\n  ## @param sasl.enabledMechanisms Comma-separated list of allowed SASL mechanisms when SASL listeners are configured. Allowed types: `PLAIN`, `SCRAM-SHA-256`, `SCRAM-SHA-512`, `OAUTHBEARER`\n  ## NOTE: At the moment, Kafka Raft mode does not support SCRAM, that is why only PLAIN is configured.\n  ##\n  enabledMechanisms: PLAIN,SCRAM-SHA-256,SCRAM-SHA-512\n  ## @param sasl.interBrokerMechanism SASL mechanism for inter broker communication.\n  ##\n  interBrokerMechanism: PLAIN\n  ## @param sasl.controllerMechanism SASL mechanism for controller communications.\n  ##\n  controllerMechanism: PLAIN\n  ## Settings for oauthbearer mechanism\n  ## @param sasl.oauthbearer.tokenEndpointUrl The URL for the OAuth/OIDC identity provider\n  ## @param sasl.oauthbearer.jwksEndpointUrl The OAuth/OIDC provider URL from which the provider's JWKS (JSON Web Key Set) can be retrieved\n  ## @param sasl.oauthbearer.expectedAudience The comma-delimited setting for the broker to use to verify that the JWT was issued for one of the expected audiences\n  ## @param sasl.oauthbearer.subClaimName The OAuth claim name for the subject.\n  ##\n  oauthbearer:\n    tokenEndpointUrl: \"\"\n    jwksEndpointUrl: \"\"\n    expectedAudience: \"\"\n    subClaimName: \"sub\"\n  ## Credentials for inter-broker communications.\n  ## @param sasl.interbroker.user Username for inter-broker communications when SASL is enabled\n  ## @param sasl.interbroker.password Password for inter-broker communications when SASL is enabled. If not set and SASL is enabled for the controller listener, a random password will be generated.\n  ## @param sasl.interbroker.clientId Client ID for inter-broker communications when SASL is enabled with mechanism OAUTHBEARER\n  ## @param sasl.interbroker.clientSecret Client Secret for inter-broker communications when SASL is enabled with mechanism OAUTHBEARER. If not set and SASL is enabled for the controller listener, a random secret will be generated.\n  ##\n  interbroker:\n    user: inter_broker_user\n    password: \"\"\n    clientId: inter_broker_client\n    clientSecret: \"\"\n  ## Credentials for controller communications.\n  ## @param sasl.controller.user Username for controller communications when SASL is enabled\n  ## @param sasl.controller.password Password for controller communications when SASL is enabled. If not set and SASL is enabled for the inter-broker listener, a random password will be generated.\n  ## @param sasl.controller.clientId Client ID for controller communications when SASL is enabled with mechanism OAUTHBEARER\n  ## @param sasl.controller.clientSecret Client Secret for controller communications when SASL is enabled with mechanism OAUTHBEARER. If not set and SASL is enabled for the inter-broker listener, a random secret will be generated.\n  ##\n  controller:\n    user: controller_user\n    password: \"\"\n    clientId: controller_broker_client\n    clientSecret: \"\"\n  ## Credentials for client communications.\n  ## @param sasl.client.users Comma-separated list of usernames for client communications when SASL is enabled\n  ## @param sasl.client.passwords Comma-separated list of passwords for client communications when SASL is enabled, must match the number of client.users\n  ##\n  client:\n    users:\n      - user1\n    passwords: \"\"\n  ## Credentials for Zookeeper communications.\n  ## @param sasl.zookeeper.user Username for zookeeper communications when SASL is enabled.\n  ## @param sasl.zookeeper.password Password for zookeeper communications when SASL is enabled.\n  ##\n  zookeeper:\n    user: \"\"\n    password: \"\"\n  ## @param sasl.existingSecret Name of the existing secret containing credentials for clientUsers, interBrokerUser, controllerUser and zookeeperUser\n  ## Create this secret running the command below where SECRET_NAME is the name of the secret you want to create:\n  ##       kubectl create secret generic SECRET_NAME --from-literal=client-passwords=CLIENT_PASSWORD1,CLIENT_PASSWORD2 --from-literal=inter-broker-password=INTER_BROKER_PASSWORD --from-literal=inter-broker-client-secret=INTER_BROKER_CLIENT_SECRET --from-literal=controller-password=CONTROLLER_PASSWORD --from-literal=controller-client-secret=CONTROLLER_CLIENT_SECRET --from-literal=zookeeper-password=ZOOKEEPER_PASSWORD\n  ## The client secrets are only required when using oauthbearer as sasl mechanism.\n  ## Client, interbroker and controller passwords are only required if the sasl mechanism includes something other than oauthbearer.\n  ##\n  existingSecret: \"\"\n## @section Kafka TLS parameters\n## Kafka TLS settings, required if SSL or SASL_SSL listeners are configured\n##\ntls:\n  ## @param tls.type Format to use for TLS certificates. Allowed types: `JKS` and `PEM`\n  ##\n  type: JKS\n  ## @param tls.pemChainIncluded Flag to denote that the Certificate Authority (CA) certificates are bundled with the endpoint cert.\n  ## Certificates must be in proper order, where the top certificate is the leaf and the bottom certificate is the top-most intermediate CA.\n  ##\n  pemChainIncluded: false\n  ## @param tls.existingSecret Name of the existing secret containing the TLS certificates for the Kafka nodes.\n  ## When using 'jks' format for certificates, each secret should contain a truststore and a keystore.\n  ## Create these secrets following the steps below:\n  ## 1) Generate your truststore and keystore files. Helpful script: https://raw.githubusercontent.com/confluentinc/confluent-platform-security-tools/master/kafka-generate-ssl.sh\n  ## 2) Rename your truststore to `kafka.truststore.jks`.\n  ## 3) Rename your keystores to `kafka-\u003crole\u003e-X.keystore.jks` where X is the replica number of the .\n  ## 4) Run the command below one time per broker to create its associated secret (SECRET_NAME_X is the name of the secret you want to create):\n  ##      kubectl create secret generic SECRET_NAME_0 --from-file=kafka.truststore.jks=./kafka.truststore.jks \\\n  ##        --from-file=kafka-controller-0.keystore.jks=./kafka-controller-0.keystore.jks --from-file=kafka-broker-0.keystore.jks=./kafka-broker-0.keystore.jks ...\n  ##\n  ## NOTE: Alternatively, a single keystore can be provided for all nodes under the key 'kafka.keystore.jks', this keystore will be used by all nodes unless overridden by the 'kafka-\u003crole\u003e-X.keystore.jks' file\n  ##\n  ## When using 'pem' format for certificates, each secret should contain a public CA certificate, a public certificate and one private key.\n  ## Create these secrets following the steps below:\n  ## 1) Create a certificate key and signing request per Kafka broker, and sign the signing request with your CA\n  ## 2) Rename your CA file to `kafka-ca.crt`.\n  ## 3) Rename your certificates to `kafka-X.tls.crt` where X is the ID of each Kafka broker.\n  ## 3) Rename your keys to `kafka-X.tls.key` where X is the ID of each Kafka broker.\n  ## 4) Run the command below one time per broker to create its associated secret (SECRET_NAME_X is the name of the secret you want to create):\n  ##      kubectl create secret generic SECRET_NAME_0 --from-file=kafka-ca.crt=./kafka-ca.crt --from-file=kafka-controller-0.crt=./kafka-controller-0.crt --from-file=kafka-controller-0.key=./kafka-controller-0.key \\\n  ##        --from-file=kafka-broker-0.crt=./kafka-broker-0.crt --from-file=kafka-broker-0.key=./kafka-broker-0.key ...\n  ##\n  ## NOTE: Alternatively, a single key and certificate can be provided for all nodes under the keys 'kafka.crt' and 'kafka.key'. These certificates will be used by all nodes unless overridden by the 'kafka-\u003crole\u003e-X.key' and 'kafka-\u003crole\u003e-X.crt' files\n  ## NOTE: Alternatively, a single key and certificate can be provided for all nodes under the keys 'tls.crt' and 'tls.key'. These certificates will be used by all nodes unless overridden by the 'kafka-\u003crole\u003e-X.key' and 'kafka-\u003crole\u003e-X.crt' files\n  ##\n  existingSecret: \"\"\n  ## @param tls.autoGenerated Generate automatically self-signed TLS certificates for Kafka brokers. Currently only supported if `tls.type` is `PEM`\n  ## Note: ignored when using 'jks' format or `tls.existingSecret` is not empty\n  ##\n  autoGenerated: false\n  ## @param tls.customAltNames Optionally specify extra list of additional subject alternative names (SANs) for the automatically generated TLS certificates.\n  ##\n  customAltNames: []\n  ## @param tls.passwordsSecret Name of the secret containing the password to access the JKS files or PEM key when they are password-protected. (`key`: `password`)\n  ##\n  passwordsSecret: \"\"\n  ## @param tls.passwordsSecretKeystoreKey The secret key from the tls.passwordsSecret containing the password for the Keystore.\n  ##\n  passwordsSecretKeystoreKey: keystore-password\n  ## @param tls.passwordsSecretTruststoreKey The secret key from the tls.passwordsSecret containing the password for the Truststore.\n  ##\n  passwordsSecretTruststoreKey: truststore-password\n  ## @param tls.passwordsSecretPemPasswordKey The secret key from the tls.passwordsSecret containing the password for the PEM key inside 'tls.passwordsSecret'.\n  ##\n  passwordsSecretPemPasswordKey: \"\"\n  ## @param tls.keystorePassword Password to access the JKS keystore when it is password-protected. Ignored when 'tls.passwordsSecret' is provided.\n  ## When using tls.type=PEM, the generated keystore will use this password or randomly generate one.\n  ##\n  keystorePassword: \"\"\n  ## @param tls.truststorePassword Password to access the JKS truststore when it is password-protected. Ignored when 'tls.passwordsSecret' is provided.\n  ## When using tls.type=PEM, the generated keystore will use this password or randomly generate one.\n  ##\n  truststorePassword: \"\"\n  ## @param tls.keyPassword Password to access the PEM key when it is password-protected.\n  ## Note: ignored when using 'tls.passwordsSecret'\n  ##\n  keyPassword: \"\"\n  ## @param tls.jksKeystoreKey The secret key from the `tls.existingSecret` containing the keystore\n  ## Note: ignored when using 'pem' format for certificates.\n  ##\n  jksKeystoreKey: \"\"\n  ## @param tls.jksTruststoreSecret Name of the existing secret containing your truststore if truststore not existing or different from the one in the `tls.existingSecret`\n  ## Note: ignored when using 'pem' format for certificates.\n  ##\n  jksTruststoreSecret: \"\"\n  ## @param tls.jksTruststoreKey The secret key from the `tls.existingSecret` or `tls.jksTruststoreSecret` containing the truststore\n  ## Note: ignored when using 'pem' format for certificates.\n  ##\n  jksTruststoreKey: \"\"\n  ## @param tls.endpointIdentificationAlgorithm The endpoint identification algorithm to validate server hostname using server certificate\n  ## Disable server host name verification by setting it to an empty string.\n  ## ref: https://docs.confluent.io/current/kafka/authentication_ssl.html#optional-settings\n  ##\n  endpointIdentificationAlgorithm: https\n  ## @param tls.sslClientAuth Sets the default value for the ssl.client.auth Kafka setting.\n  ## ref: https://docs.confluent.io/current/kafka/authentication_ssl.html#optional-settings\n  ##\n  sslClientAuth: \"required\"\n  ## Zookeeper TLS connection configuration for Kafka\n  ##\n  zookeeper:\n    ## @param tls.zookeeper.enabled Enable TLS for Zookeeper client connections.\n    ##\n    enabled: true\n    ## @param tls.zookeeper.verifyHostname Hostname validation.\n    ##\n    verifyHostname: true\n    ## @param tls.zookeeper.existingSecret Name of the existing secret containing the TLS certificates for ZooKeeper client communications.\n    ##\n    existingSecret: \"\"\n    ## @param tls.zookeeper.existingSecretKeystoreKey The secret key from the  tls.zookeeper.existingSecret containing the Keystore.\n    ##\n    existingSecretKeystoreKey: zookeeper.keystore.jks\n    ## @param tls.zookeeper.existingSecretTruststoreKey The secret key from the tls.zookeeper.existingSecret containing the Truststore.\n    ##\n    existingSecretTruststoreKey: zookeeper.truststore.jks\n    ## @param tls.zookeeper.passwordsSecret Existing secret containing Keystore and Truststore passwords.\n    ##\n    passwordsSecret: \"\"\n    ## @param tls.zookeeper.passwordsSecretKeystoreKey The secret key from the tls.zookeeper.passwordsSecret containing the password for the Keystore.\n    ## If no keystore password is included in the passwords secret, set this value to an empty string.\n    ##\n    passwordsSecretKeystoreKey: keystore-password\n    ## @param tls.zookeeper.passwordsSecretTruststoreKey The secret key from the tls.zookeeper.passwordsSecret containing the password for the Truststore.\n    ## If no truststore password is included in the passwords secret, set this value to an empty string.\n    ##\n    passwordsSecretTruststoreKey: truststore-password\n    ## @param tls.zookeeper.keystorePassword Password to access the JKS keystore when it is password-protected. Ignored when 'tls.passwordsSecret' is provided.\n    ## When using tls.type=PEM, the generated keystore will use this password or randomly generate one.\n    ##\n    keystorePassword: \"\"\n    ## @param tls.zookeeper.truststorePassword Password to access the JKS truststore when it is password-protected. Ignored when 'tls.passwordsSecret' is provided.\n    ## When using tls.type=PEM, the generated keystore will use this password or randomly generate one.\n    ##\n    truststorePassword: \"\"\n## @param extraEnvVars Extra environment variables to add to Kafka pods\n## ref: https://github.com/bitnami/containers/tree/main/bitnami/kafka#configuration\n## e.g:\n## extraEnvVars:\n##   - name: KAFKA_CFG_BACKGROUND_THREADS\n##     value: \"10\"\n##\nextraEnvVars: []\n## @param extraEnvVarsCM ConfigMap with extra environment variables\n##\nextraEnvVarsCM: \"\"\n## @param extraEnvVarsSecret Secret with extra environment variables\n##\nextraEnvVarsSecret: \"\"\n## @param extraVolumes Optionally specify extra list of additional volumes for the Kafka pod(s)\n## e.g:\n## extraVolumes:\n##   - name: kafka-jaas\n##     secret:\n##       secretName: kafka-jaas\n##\nextraVolumes: []\n## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Kafka container(s)\n## extraVolumeMounts:\n##   - name: kafka-jaas\n##     mountPath: /bitnami/kafka/config/kafka_jaas.conf\n##     subPath: kafka_jaas.conf\n##\nextraVolumeMounts: []\n## @param sidecars Add additional sidecar containers to the Kafka pod(s)\n## e.g:\n## sidecars:\n##   - name: your-image-name\n##     image: your-image\n##     imagePullPolicy: Always\n##     ports:\n##       - name: portname\n##         containerPort: 1234\n##\nsidecars: []\n## @param initContainers Add additional Add init containers to the Kafka pod(s)\n## e.g:\n## initContainers:\n##   - name: your-image-name\n##     image: your-image\n##     imagePullPolicy: Always\n##     ports:\n##       - name: portname\n##         containerPort: 1234\n##\ninitContainers: []\n## DNS-Pod services\n## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\n## @param dnsPolicy Specifies the DNS policy for the zookeeper pods\n## DNS policies can be set on a per-Pod basis. Currently Kubernetes supports the following Pod-specific DNS policies.\n## Available options: Default, ClusterFirst, ClusterFirstWithHostNet, None\n## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy\ndnsPolicy: \"\"\n## @param dnsConfig  allows users more control on the DNS settings for a Pod. Required if `dnsPolicy` is set to `None`\n## The dnsConfig field is optional and it can work with any dnsPolicy settings.\n## Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config\n## E.g.\n## dnsConfig:\n##   nameservers:\n##     - 192.0.2.1 # this is an example\n##   searches:\n##     - ns1.svc.cluster-domain.example\n##     - my.dns.search.suffix\n##   options:\n##     - name: ndots\n##       value: \"2\"\n##     - name: edns0\ndnsConfig: {}\n## @section Controller-eligible statefulset parameters\n##\ncontroller:\n  ## @param controller.replicaCount Number of Kafka controller-eligible nodes\n  ## Ignore this section if running in Zookeeper mode.\n  ##\n  replicaCount: 3\n  ## @param controller.controllerOnly If set to true, controller nodes will be deployed as dedicated controllers, instead of controller+broker processes.\n  ##\n  controllerOnly: false\n  ## @param controller.minId Minimal node.id values for controller-eligible nodes. Do not change after first initialization.\n  ## Broker-only id increment their ID starting at this minimal value.\n  ## We recommend setting this this value high enough, as IDs under this value will be used by controller-elegible nodes\n  ##\n  minId: 0\n  ## @param controller.zookeeperMigrationMode Set to true to deploy cluster controller quorum\n  ## This allows configuring both kraft and zookeeper modes simultaneously in order to perform the migration of the Kafka metadata.\n  ## Ref. https://docs.confluent.io/platform/current/installation/migrate-zk-kraft.html\n  ##\n  zookeeperMigrationMode: false\n  ## @param controller.config Configuration file for Kafka controller-eligible nodes, rendered as a template. Auto-generated based on chart values when not specified.\n  ## @param controller.existingConfigmap ConfigMap with Kafka Configuration for controller-eligible nodes.\n  ## NOTE: This will override the configuration based on values, please act carefully\n  ## If both are set, the existingConfigMap will be used.\n  ##\n  config: \"\"\n  existingConfigmap: \"\"\n  ## @param controller.extraConfig Additional configuration to be appended at the end of the generated Kafka controller-eligible nodes configuration file.\n  ##\n  extraConfig: \"\"\n  ## @param controller.extraConfigYaml Additional configuration in yaml format to be appended at the end of the generated Kafka controller-eligible nodes configuration file.\n  ## If keys of extraConfigYaml are duplicated here, the value from controller.extraConfigYaml is taken.\n  ##\n  extraConfigYaml: {}\n  ## @param controller.secretConfig Additional configuration to be appended at the end of the generated Kafka controller-eligible nodes configuration file.\n  ## This value will be stored in a secret.\n  ##\n  secretConfig: \"\"\n  ## @param controller.existingSecretConfig Secret with additonal configuration that will be appended to the end of the generated Kafka controller-eligible nodes configuration file\n  ## The key for the configuration should be: server-secret.properties\n  ## NOTE: This will override controller.secretConfig value\n  ##\n  existingSecretConfig: \"\"\n  ## @param controller.heapOpts Kafka Java Heap size for controller-eligible nodes\n  ##\n  heapOpts: -Xmx1024m -Xms1024m\n  ## @param controller.command Override Kafka container command\n  ##\n  command: []\n  ## @param controller.args Override Kafka container arguments\n  ##\n  args: []\n  ## @param controller.extraEnvVars Extra environment variables to add to Kafka pods\n  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/kafka#configuration\n  ## e.g:\n  ## extraEnvVars:\n  ##   - name: KAFKA_CFG_BACKGROUND_THREADS\n  ##     value: \"10\"\n  ##\n  extraEnvVars: []\n  ## @param controller.extraEnvVarsCM ConfigMap with extra environment variables\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param controller.extraEnvVarsSecret Secret with extra environment variables\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param controller.extraContainerPorts Kafka controller-eligible extra containerPorts.\n  ##\n  extraContainerPorts: []\n  ## Configure extra options for Kafka containers' liveness, readiness and startup probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n  ## @param controller.livenessProbe.enabled Enable livenessProbe on Kafka containers\n  ## @param controller.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param controller.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param controller.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param controller.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param controller.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 3\n    periodSeconds: 10\n    successThreshold: 1\n  ## @param controller.readinessProbe.enabled Enable readinessProbe on Kafka containers\n  ## @param controller.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param controller.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param controller.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param controller.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param controller.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    failureThreshold: 6\n    timeoutSeconds: 5\n    periodSeconds: 10\n    successThreshold: 1\n  ## @param controller.startupProbe.enabled Enable startupProbe on Kafka containers\n  ## @param controller.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param controller.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param controller.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param controller.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param controller.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 1\n    failureThreshold: 15\n    successThreshold: 1\n  ## @param controller.customLivenessProbe Custom livenessProbe that overrides the default one\n  ##\n  customLivenessProbe: {}\n  ## @param controller.customReadinessProbe Custom readinessProbe that overrides the default one\n  ##\n  customReadinessProbe: {}\n  ## @param controller.customStartupProbe Custom startupProbe that overrides the default one\n  ##\n  customStartupProbe: {}\n  ## @param controller.lifecycleHooks lifecycleHooks for the Kafka container to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## Kafka init container resource requests and limits\n  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n  ## @param controller.initContainerResources.limits The resources limits for the init container\n  ## @param controller.initContainerResources.requests The requested resources for the init container\n  ##\n  initContainerResources:\n    limits: {}\n    requests: {}\n  ## Kafka resource requests and limits\n  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  ## @param controller.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if controller.resources is set (controller.resources is recommended for production).\n  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n  ##\n  resourcesPreset: \"small\"\n  ## @param controller.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)\n  ## Example:\n  ## resources:\n  ##   requests:\n  ##     cpu: 2\n  ##     memory: 512Mi\n  ##   limits:\n  ##     cpu: 3\n  ##     memory: 1024Mi\n  ##\n  # resources:\n  #   limits:\n  #     cpu: 2\n  #     memory: 4Gi\n  #     ephemeral-storage: 2Gi\n  #   requests:\n  #     cpu: 500m\n  #     memory: 512Mi\n  #     ephemeral-storage: 50Mi\n  ## Kafka pods' Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param controller.podSecurityContext.enabled Enable security context for the pods\n  ## @param controller.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy\n  ## @param controller.podSecurityContext.sysctls Set kernel settings using the sysctl interface\n  ## @param controller.podSecurityContext.supplementalGroups Set filesystem extra groups\n  ## @param controller.podSecurityContext.fsGroup Set Kafka pod's Security Context fsGroup\n  ## @param controller.podSecurityContext.seccompProfile.type Set Kafka pods's Security Context seccomp profile\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroupChangePolicy: Always\n    sysctls: []\n    supplementalGroups: []\n    fsGroup: 1001\n    seccompProfile:\n      type: \"RuntimeDefault\"\n  ## Kafka containers' Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n  ## @param controller.containerSecurityContext.enabled Enable Kafka containers' Security Context\n  ## @param controller.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container\n  ## @param controller.containerSecurityContext.runAsUser Set containers' Security Context runAsUser\n  ## @param controller.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup\n  ## @param controller.containerSecurityContext.runAsGroup Set Kafka containers' Security Context runAsGroup\n  ## @param controller.containerSecurityContext.runAsNonRoot Set Kafka containers' Security Context runAsNonRoot\n  ## @param controller.containerSecurityContext.allowPrivilegeEscalation Force the child process to be run as non-privileged\n  ## @param controller.containerSecurityContext.readOnlyRootFilesystem Allows the pod to mount the RootFS as ReadOnly only\n  ## @param controller.containerSecurityContext.capabilities.drop Set Kafka containers' server Security Context capabilities to be dropped\n  ## e.g:\n  ##   containerSecurityContext:\n  ##     enabled: true\n  ##     capabilities:\n  ##       drop: [\"NET_RAW\"]\n  ##     readOnlyRootFilesystem: true\n  ##\n  containerSecurityContext:\n    enabled: true\n    seLinuxOptions: {}\n    runAsUser: 1001\n    runAsGroup: 1001\n    runAsNonRoot: true\n    allowPrivilegeEscalation: false\n    readOnlyRootFilesystem: true\n    capabilities:\n      drop: [\"ALL\"]\n  ## @param controller.automountServiceAccountToken Mount Service Account token in pod\n  ##\n  automountServiceAccountToken: false\n  ## @param controller.hostAliases Kafka pods host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## @param controller.hostNetwork Specify if host network should be enabled for Kafka pods\n  ##\n  hostNetwork: false\n  ## @param controller.hostIPC Specify if host IPC should be enabled for Kafka pods\n  ##\n  hostIPC: false\n  ## @param controller.podLabels Extra labels for Kafka pods\n  ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  ##\n  podLabels: {}\n  ## @param controller.podAnnotations Extra annotations for Kafka pods\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n  ##\n  podAnnotations: {}\n  ## @param controller.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param controller.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## Node affinity preset\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ##\n  nodeAffinityPreset:\n    ## @param controller.nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n    ##\n    type: \"\"\n    ## @param controller.nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.\n    ## E.g.\n    ## key: \"kubernetes.io/e2e-az-name\"\n    ##\n    key: \"\"\n    ## @param controller.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## @param controller.affinity Affinity for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set\n  ##\n  affinity: {}\n  ## @param controller.nodeSelector Node labels for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n  ##\n  nodeSelector: {}\n  ## @param controller.tolerations Tolerations for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param controller.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template\n  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods\n  ##\n  topologySpreadConstraints: []\n  ## @param controller.terminationGracePeriodSeconds Seconds the pod needs to gracefully terminate\n  ## ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#hook-handler-execution\n  ##\n  terminationGracePeriodSeconds: \"\"\n  ## @param controller.podManagementPolicy StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel\n  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy\n  ##\n  podManagementPolicy: Parallel\n  ## @param controller.minReadySeconds How many seconds a pod needs to be ready before killing the next, during update\n  ##\n  minReadySeconds: 0\n  ## @param controller.priorityClassName Name of the existing priority class to be used by kafka pods\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  ##\n  priorityClassName: \"\"\n  ## @param controller.runtimeClassName Name of the runtime class to be used by pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/\n  ##\n  runtimeClassName: \"\"\n  ## @param controller.enableServiceLinks Whether information about services should be injected into pod's environment variable\n  ## The environment variables injected by service links are not used, but can lead to slow kafka boot times or slow running of the scripts when there are many services in the current namespace.\n  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.\n  ##\n  enableServiceLinks: true\n  ## @param controller.schedulerName Name of the k8s scheduler (other than default)\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param controller.updateStrategy.type Kafka statefulset strategy type\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  ##\n  updateStrategy:\n    type: RollingUpdate\n  ## @param controller.extraVolumes Optionally specify extra list of additional volumes for the Kafka pod(s)\n  ## e.g:\n  ## extraVolumes:\n  ##   - name: kafka-jaas\n  ##     secret:\n  ##       secretName: kafka-jaas\n  ##\n  extraVolumes: []\n  ## @param controller.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Kafka container(s)\n  ## extraVolumeMounts:\n  ##   - name: kafka-jaas\n  ##     mountPath: /bitnami/kafka/config/kafka_jaas.conf\n  ##     subPath: kafka_jaas.conf\n  ##\n  extraVolumeMounts: []\n  ## @param controller.sidecars Add additional sidecar containers to the Kafka pod(s)\n  ## e.g:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param controller.initContainers Add additional Add init containers to the Kafka pod(s)\n  ## e.g:\n  ## initContainers:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  initContainers: []\n  ## @section Experimental: Kafka Controller Autoscaling configuration\n  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/\n  ##\n  autoscaling:\n    vpa:\n      ## @param controller.autoscaling.vpa.enabled Enable VPA\n      ##\n      enabled: false\n      ## @param controller.autoscaling.vpa.annotations Annotations for VPA resource\n      ##\n      annotations: {}\n      ## @param controller.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory\n      ##\n      controlledResources:\n        - cpu\n        - memory      \n      maxAllowed:\n        cpu: 1    \n        memory: 2Gi   \n      minAllowed:\n        cpu: 500m     \n        memory: 512Mi  \n      updatePolicy:\n        ## @param controller.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod\n        ## Possible values are \"Off\", \"Initial\", \"Recreate\", and \"Auto\".\n        ##\n        updateMode: Auto\n    hpa:\n      ## @param controller.autoscaling.hpa.enabled Enable HPA for Kafka Controller\n      ##\n      enabled: false\n      ## @param controller.autoscaling.hpa.minReplicas Minimum number of Kafka Controller replicas\n      ##\n      minReplicas: 2\n      ## @param controller.autoscaling.hpa.maxReplicas Maximum number of Kafka Controller replicas\n      ##\n      maxReplicas: 3\n      ## @param controller.autoscaling.hpa.targetCPU Target CPU utilization percentage\n      ##\n      targetCPU: 70\n      ## @param controller.autoscaling.hpa.targetMemory Target Memory utilization percentage\n      ##\n      targetMemory: 80\n  ## Kafka Pod Disruption Budget\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\n  ## @param controller.pdb.create Deploy a pdb object for the Kafka pod\n  ## @param controller.pdb.minAvailable Minimum number/percentage of available Kafka replicas\n  ## @param controller.pdb.maxUnavailable Maximum number/percentage of unavailable Kafka replicas\n  ##\n  # pdb:\n  #   create: true\n  #   minAvailable: 1\n  #   maxUnavailable: \"\"\n  ## Enable persistence using Persistent Volume Claims\n  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/\n  ##\n  persistence:\n    ## @param controller.persistence.enabled Enable Kafka data persistence using PVC, note that ZooKeeper persistence is unaffected\n    ##\n    enabled: true\n    ## @param controller.persistence.existingClaim A manually managed Persistent Volume and Claim\n    ## If defined, PVC must be created manually before volume will be bound\n    ## The value is evaluated as a template\n    ##\n    existingClaim: \"\"\n    ## @param controller.persistence.storageClass PVC Storage Class for Kafka data volume\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ## set, choosing the default provisioner.\n    ##\n    storageClass: \"\"\n    ## @param controller.persistence.accessModes Persistent Volume Access Modes\n    ##\n    accessModes:\n      - ReadWriteOnce\n    ## @param controller.persistence.size PVC Storage Request for Kafka data volume\n    ##\n    size: 8Gi\n    ## @param controller.persistence.annotations Annotations for the PVC\n    ##\n    annotations: {}\n    ## @param controller.persistence.labels Labels for the PVC\n    ##\n    labels: {}\n    ## @param controller.persistence.selector Selector to match an existing Persistent Volume for Kafka data PVC. If set, the PVC can't have a PV dynamically provisioned for it\n    ## selector:\n    ##   matchLabels:\n    ##     app: my-app\n    ##\n    selector: {}\n    ## @param controller.persistence.mountPath Mount path of the Kafka data volume\n    ##\n    mountPath: /bitnami/kafka\n  ## Log Persistence parameters\n  ##\n  logPersistence:\n    ## @param controller.logPersistence.enabled Enable Kafka logs persistence using PVC, note that ZooKeeper persistence is unaffected\n    ##\n    enabled: false\n    ## @param controller.logPersistence.existingClaim A manually managed Persistent Volume and Claim\n    ## If defined, PVC must be created manually before volume will be bound\n    ## The value is evaluated as a template\n    ##\n    existingClaim: \"\"\n    ## @param controller.logPersistence.storageClass PVC Storage Class for Kafka logs volume\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ## set, choosing the default provisioner.\n    ##\n    storageClass: \"\"\n    ## @param controller.logPersistence.accessModes Persistent Volume Access Modes\n    ##\n    accessModes:\n      - ReadWriteOnce\n    ## @param controller.logPersistence.size PVC Storage Request for Kafka logs volume\n    ##\n    size: 8Gi\n    ## @param controller.logPersistence.annotations Annotations for the PVC\n    ##\n    annotations: {}\n    ## @param controller.logPersistence.selector Selector to match an existing Persistent Volume for Kafka log data PVC. If set, the PVC can't have a PV dynamically provisioned for it\n    ## selector:\n    ##   matchLabels:\n    ##     app: my-app\n    ##\n    selector: {}\n    ## @param controller.logPersistence.mountPath Mount path of the Kafka logs volume\n    ##\n    mountPath: /opt/bitnami/kafka/logs\n## @section Broker-only statefulset parameters\n##\nbroker:\n  ## @param broker.replicaCount Number of Kafka broker-only nodes\n  ##\n  replicaCount: 0\n  ## @param broker.minId Minimal node.id values for broker-only nodes. Do not change after first initialization.\n  ## Broker-only id increment their ID starting at this minimal value.\n  ## We recommend setting this this value high enough, as IDs under this value will be used by controller-eligible nodes\n  ##\n  ##\n  minId: 100\n  ## @param broker.zookeeperMigrationMode Set to true to deploy cluster controller quorum\n  ## This allows configuring both kraft and zookeeper modes simultaneously in order to perform the migration of the Kafka metadata.\n  ## Ref. https://docs.confluent.io/platform/current/installation/migrate-zk-kraft.html\n  ##\n  zookeeperMigrationMode: false\n  ## @param broker.config Configuration file for Kafka broker-only nodes, rendered as a template. Auto-generated based on chart values when not specified.\n  ## @param broker.existingConfigmap ConfigMap with Kafka Configuration for broker-only nodes.\n  ## NOTE: This will override the configuration based on values, please act carefully\n  ## If both are set, the existingConfigMap will be used.\n  ##\n  config: \"\"\n  existingConfigmap: \"\"\n  ## @param broker.extraConfig Additional configuration to be appended at the end of the generated Kafka broker-only nodes configuration file.\n  ##\n  extraConfig: \"\"\n  ## @param broker.extraConfigYaml Additional configuration in yaml format to be appended at the end of the generated Kafka broker-only nodes configuration file.\n  ## If keys of extraConfigYaml are duplicated here, the value from broker.extraConfigYaml is taken.\n  ##\n  extraConfigYaml: {}\n  ## @param broker.secretConfig Additional configuration to be appended at the end of the generated Kafka broker-only nodes configuration file.\n  ## This value will be stored in a secret.\n  ##\n  secretConfig: \"\"\n  ## @param broker.existingSecretConfig Secret with additonal configuration that will be appended to the end of the generated Kafka broker-only nodes configuration file\n  ## The key for the configuration should be: server-secret.properties\n  ## NOTE: This will override broker.secretConfig value\n  ##\n  existingSecretConfig: \"\"\n  ## @param broker.heapOpts Kafka Java Heap size for broker-only nodes\n  ##\n  heapOpts: -Xmx1024m -Xms1024m\n  ## @param broker.command Override Kafka container command\n  ##\n  command: []\n  ## @param broker.args Override Kafka container arguments\n  ##\n  args: []\n  ## @param broker.extraEnvVars Extra environment variables to add to Kafka pods\n  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/kafka#configuration\n  ## e.g:\n  ## extraEnvVars:\n  ##   - name: KAFKA_CFG_BACKGROUND_THREADS\n  ##     value: \"10\"\n  ##\n  extraEnvVars: []\n  ## @param broker.extraEnvVarsCM ConfigMap with extra environment variables\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param broker.extraEnvVarsSecret Secret with extra environment variables\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param broker.extraContainerPorts Kafka broker-only extra containerPorts.\n  ##\n  extraContainerPorts: []\n  ## Configure extra options for Kafka containers' liveness, readiness and startup probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n  ## @param broker.livenessProbe.enabled Enable livenessProbe on Kafka containers\n  ## @param broker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param broker.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param broker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param broker.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param broker.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 3\n    periodSeconds: 10\n    successThreshold: 1\n  ## @param broker.readinessProbe.enabled Enable readinessProbe on Kafka containers\n  ## @param broker.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param broker.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param broker.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param broker.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param broker.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    failureThreshold: 6\n    timeoutSeconds: 5\n    periodSeconds: 10\n    successThreshold: 1\n  ## @param broker.startupProbe.enabled Enable startupProbe on Kafka containers\n  ## @param broker.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param broker.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param broker.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param broker.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param broker.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 1\n    failureThreshold: 15\n    successThreshold: 1\n  ## @param broker.customLivenessProbe Custom livenessProbe that overrides the default one\n  ##\n  customLivenessProbe: {}\n  ## @param broker.customReadinessProbe Custom readinessProbe that overrides the default one\n  ##\n  customReadinessProbe: {}\n  ## @param broker.customStartupProbe Custom startupProbe that overrides the default one\n  ##\n  customStartupProbe: {}\n  ## @param broker.lifecycleHooks lifecycleHooks for the Kafka container to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## Kafka init container resource requests and limits\n  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n  ## @param broker.initContainerResources.limits The resources limits for the container\n  ## @param broker.initContainerResources.requests The requested resources for the container\n  ##\n  initContainerResources:\n    limits: {}\n    requests: {}\n  ## Kafka resource requests and limits\n  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  ## @param broker.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if broker.resources is set (broker.resources is recommended for production).\n  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n  ##\n  resourcesPreset: \"small\"\n  ## @param broker.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)\n  ## Example:\n  ## resources:\n  ##   requests:\n  ##     cpu: 2\n  ##     memory: 512Mi\n  ##   limits:\n  ##     cpu: 3\n  ##     memory: 1024Mi\n  ##\n  resources: {}\n  ## Kafka pods' Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param broker.podSecurityContext.enabled Enable security context for the pods\n  ## @param broker.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy\n  ## @param broker.podSecurityContext.sysctls Set kernel settings using the sysctl interface\n  ## @param broker.podSecurityContext.supplementalGroups Set filesystem extra groups\n  ## @param broker.podSecurityContext.fsGroup Set Kafka pod's Security Context fsGroup\n  ## @param broker.podSecurityContext.seccompProfile.type Set Kafka pod's Security Context seccomp profile\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroupChangePolicy: Always\n    sysctls: []\n    supplementalGroups: []\n    fsGroup: 1001\n    seccompProfile:\n      type: \"RuntimeDefault\"\n  ## Kafka containers' Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n  ## @param broker.containerSecurityContext.enabled Enable Kafka containers' Security Context\n  ## @param broker.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container\n  ## @param broker.containerSecurityContext.runAsUser Set containers' Security Context runAsUser\n  ## @param broker.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup\n  ## @param broker.containerSecurityContext.runAsNonRoot Set Kafka containers' Security Context runAsNonRoot\n  ## @param broker.containerSecurityContext.allowPrivilegeEscalation Force the child process to be run as non-privileged\n  ## @param broker.containerSecurityContext.readOnlyRootFilesystem Allows the pod to mount the RootFS as ReadOnly only\n  ## @param broker.containerSecurityContext.capabilities.drop Set Kafka containers' server Security Context capabilities to be dropped\n  ## e.g:\n  ##   containerSecurityContext:\n  ##     enabled: true\n  ##     capabilities:\n  ##       drop: [\"NET_RAW\"]\n  ##     readOnlyRootFilesystem: true\n  ##\n  containerSecurityContext:\n    enabled: true\n    seLinuxOptions: {}\n    runAsUser: 1001\n    runAsGroup: 1001\n    runAsNonRoot: true\n    allowPrivilegeEscalation: false\n    readOnlyRootFilesystem: true\n    capabilities:\n      drop: [\"ALL\"]\n  ## @param broker.automountServiceAccountToken Mount Service Account token in pod\n  ##\n  automountServiceAccountToken: false\n  ## @param broker.hostAliases Kafka pods host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## @param broker.hostNetwork Specify if host network should be enabled for Kafka pods\n  ##\n  hostNetwork: false\n  ## @param broker.hostIPC Specify if host IPC should be enabled for Kafka pods\n  ##\n  hostIPC: false\n  ## @param broker.podLabels Extra labels for Kafka pods\n  ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  ##\n  podLabels: {}\n  ## @param broker.podAnnotations Extra annotations for Kafka pods\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n  ##\n  podAnnotations: {}\n  ## @param broker.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param broker.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## Node affinity preset\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ##\n  nodeAffinityPreset:\n    ## @param broker.nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n    ##\n    type: \"\"\n    ## @param broker.nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.\n    ## E.g.\n    ## key: \"kubernetes.io/e2e-az-name\"\n    ##\n    key: \"\"\n    ## @param broker.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## @param broker.affinity Affinity for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set\n  ##\n  affinity: {}\n  ## @param broker.nodeSelector Node labels for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n  ##\n  nodeSelector: {}\n  ## @param broker.tolerations Tolerations for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param broker.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template\n  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods\n  ##\n  topologySpreadConstraints: []\n  ## @param broker.terminationGracePeriodSeconds Seconds the pod needs to gracefully terminate\n  ## ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#hook-handler-execution\n  ##\n  terminationGracePeriodSeconds: \"\"\n  ## @param broker.podManagementPolicy StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel\n  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy\n  ##\n  podManagementPolicy: Parallel\n  ## @param broker.minReadySeconds How many seconds a pod needs to be ready before killing the next, during update\n  ##\n  minReadySeconds: 0\n  ## @param broker.priorityClassName Name of the existing priority class to be used by kafka pods\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  ##\n  priorityClassName: \"\"\n  ## @param broker.runtimeClassName Name of the runtime class to be used by pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/\n  ##\n  runtimeClassName: \"\"\n  ## @param broker.enableServiceLinks Whether information about services should be injected into pod's environment variable\n  ## The environment variables injected by service links are not used, but can lead to slow kafka boot times or slow running of the scripts when there are many services in the current namespace.\n  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.\n  ##\n  enableServiceLinks: true\n  ## @param broker.schedulerName Name of the k8s scheduler (other than default)\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param broker.updateStrategy.type Kafka statefulset strategy type\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  ##\n  updateStrategy:\n    type: RollingUpdate\n  ## @param broker.extraVolumes Optionally specify extra list of additional volumes for the Kafka pod(s)\n  ## e.g:\n  ## extraVolumes:\n  ##   - name: kafka-jaas\n  ##     secret:\n  ##       secretName: kafka-jaas\n  ##\n  extraVolumes: []\n  ## @param broker.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Kafka container(s)\n  ## extraVolumeMounts:\n  ##   - name: kafka-jaas\n  ##     mountPath: /bitnami/kafka/config/kafka_jaas.conf\n  ##     subPath: kafka_jaas.conf\n  ##\n  extraVolumeMounts: []\n  ## @param broker.sidecars Add additional sidecar containers to the Kafka pod(s)\n  ## e.g:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param broker.initContainers Add additional Add init containers to the Kafka pod(s)\n  ## e.g:\n  ## initContainers:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  initContainers: []\n  ## Kafka Pod Disruption Budget\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\n  ## @param broker.pdb.create Deploy a pdb object for the Kafka pod\n  ## @param broker.pdb.minAvailable Maximum number/percentage of unavailable Kafka replicas\n  ## @param broker.pdb.maxUnavailable Maximum number/percentage of unavailable Kafka replicas\n  ##\n  pdb:\n    create: true\n    minAvailable: \"\"\n    maxUnavailable: \"\"\n  ## @section Experimental: Kafka Broker Autoscaling configuration\n  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/\n  ##\n  autoscaling:\n    vpa:\n      ## @param broker.autoscaling.vpa.enabled Enable VPA\n      ##\n      enabled: false\n      ## @param broker.autoscaling.vpa.annotations Annotations for VPA resource\n      ##\n      annotations: {}\n      ## @param broker.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory\n      ##\n      controlledResources: []\n      ## @param broker.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod\n      ## cpu: 200m\n      ## memory: 100Mi\n      maxAllowed: {}\n      ## @param broker.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod\n      ## cpu: 200m\n      ## memory: 100Mi\n      minAllowed: {}\n      updatePolicy:\n        ## @param broker.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod\n        ## Possible values are \"Off\", \"Initial\", \"Recreate\", and \"Auto\".\n        ##\n        updateMode: Auto\n    hpa:\n      ## @param broker.autoscaling.hpa.enabled Enable HPA for Kafka Broker\n      ##\n      enabled: false\n      ## @param broker.autoscaling.hpa.minReplicas Minimum number of Kafka Broker replicas\n      ##\n      minReplicas: \"\"\n      ## @param broker.autoscaling.hpa.maxReplicas Maximum number of Kafka Broker replicas\n      ##\n      maxReplicas: \"\"\n      ## @param broker.autoscaling.hpa.targetCPU Target CPU utilization percentage\n      ##\n      targetCPU: \"\"\n      ## @param broker.autoscaling.hpa.targetMemory Target Memory utilization percentage\n      ##\n      targetMemory: \"\"\n  ## Enable persistence using Persistent Volume Claims\n  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/\n  ##\n  persistence:\n    ## @param broker.persistence.enabled Enable Kafka data persistence using PVC, note that ZooKeeper persistence is unaffected\n    ##\n    enabled: true\n    ## @param broker.persistence.existingClaim A manually managed Persistent Volume and Claim\n    ## If defined, PVC must be created manually before volume will be bound\n    ## The value is evaluated as a template\n    ##\n    existingClaim: \"\"\n    ## @param broker.persistence.storageClass PVC Storage Class for Kafka data volume\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ## set, choosing the default provisioner.\n    ##\n    storageClass: \"\"\n    ## @param broker.persistence.accessModes Persistent Volume Access Modes\n    ##\n    accessModes:\n      - ReadWriteOnce\n    ## @param broker.persistence.size PVC Storage Request for Kafka data volume\n    ##\n    size: 8Gi\n    ## @param broker.persistence.annotations Annotations for the PVC\n    ##\n    annotations: {}\n    ## @param broker.persistence.labels Labels for the PVC\n    ##\n    labels: {}\n    ## @param broker.persistence.selector Selector to match an existing Persistent Volume for Kafka data PVC. If set, the PVC can't have a PV dynamically provisioned for it\n    ## selector:\n    ##   matchLabels:\n    ##     app: my-app\n    ##\n    selector: {}\n    ## @param broker.persistence.mountPath Mount path of the Kafka data volume\n    ##\n    mountPath: /bitnami/kafka\n  ## Log Persistence parameters\n  ##\n  logPersistence:\n    ## @param broker.logPersistence.enabled Enable Kafka logs persistence using PVC, note that ZooKeeper persistence is unaffected\n    ##\n    enabled: false\n    ## @param broker.logPersistence.existingClaim A manually managed Persistent Volume and Claim\n    ## If defined, PVC must be created manually before volume will be bound\n    ## The value is evaluated as a template\n    ##\n    existingClaim: \"\"\n    ## @param broker.logPersistence.storageClass PVC Storage Class for Kafka logs volume\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ## set, choosing the default provisioner.\n    ##\n    storageClass: \"\"\n    ## @param broker.logPersistence.accessModes Persistent Volume Access Modes\n    ##\n    accessModes:\n      - ReadWriteOnce\n    ## @param broker.logPersistence.size PVC Storage Request for Kafka logs volume\n    ##\n    size: 8Gi\n    ## @param broker.logPersistence.annotations Annotations for the PVC\n    ##\n    annotations: {}\n    ## @param broker.logPersistence.selector Selector to match an existing Persistent Volume for Kafka log data PVC. If set, the PVC can't have a PV dynamically provisioned for it\n    ## selector:\n    ##   matchLabels:\n    ##     app: my-app\n    ##\n    selector: {}\n    ## @param broker.logPersistence.mountPath Mount path of the Kafka logs volume\n    ##\n    mountPath: /opt/bitnami/kafka/logs\n## @section Traffic Exposure parameters\n##\n\n## Service parameters\n##\nservice:\n  ## @param service.type Kubernetes Service type\n  ##\n  type: ClusterIP\n  ## @param service.ports.client Kafka svc port for client connections\n  ## @param service.ports.controller Kafka svc port for controller connections. It is used if \"kraft.enabled: true\"\n  ## @param service.ports.interbroker Kafka svc port for inter-broker connections\n  ## @param service.ports.external Kafka svc port for external connections\n  ##\n  ports:\n    client: 9092\n    controller: 9093\n    interbroker: 9094\n    external: 9095\n  ## @param service.extraPorts Extra ports to expose in the Kafka service (normally used with the `sidecar` value)\n  ##\n  extraPorts: []\n  ## @param service.nodePorts.client Node port for the Kafka client connections\n  ## @param service.nodePorts.external Node port for the Kafka external connections\n  ## NOTE: choose port between \u003c30000-32767\u003e\n  ##\n  nodePorts:\n    client: \"\"\n    external: \"\"\n  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin\n  ## Values: ClientIP or None\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/\n  ##\n  sessionAffinity: None\n  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity\n  ## sessionAffinityConfig:\n  ##   clientIP:\n  ##     timeoutSeconds: 300\n  ##\n  sessionAffinityConfig: {}\n  ## @param service.clusterIP Kafka service Cluster IP\n  ## e.g.:\n  ## clusterIP: None\n  ##\n  clusterIP: \"\"\n  ## @param service.loadBalancerIP Kafka service Load Balancer IP\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer\n  ##\n  loadBalancerIP: \"\"\n  ## @param service.loadBalancerClass Kafka service Load Balancer Class\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class\n  ##\n  loadBalancerClass: \"\"\n  ## @param service.loadBalancerSourceRanges Kafka service Load Balancer sources\n  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n  ## e.g:\n  ## loadBalancerSourceRanges:\n  ##   - 10.10.10.0/24\n  ##\n  loadBalancerSourceRanges: []\n  ## @param service.allocateLoadBalancerNodePorts Whether to allocate node ports when service type is LoadBalancer\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation\n  ##\n  allocateLoadBalancerNodePorts: true\n  ## @param service.externalTrafficPolicy Kafka service external traffic policy\n  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n  ##\n  externalTrafficPolicy: Cluster\n  ## @param service.annotations Additional custom annotations for Kafka service\n  ##\n  annotations: {}\n  ## Headless service properties\n  ##\n  headless:\n    controller:\n      ## @param service.headless.controller.annotations Annotations for the controller-eligible headless service.\n      ##\n      annotations: {}\n      ## @param service.headless.controller.labels Labels for the controller-eligible headless service.\n      ##\n      labels: {}\n    broker:\n      ## @param service.headless.broker.annotations Annotations for the broker-only headless service.\n      ##\n      annotations: {}\n      ## @param service.headless.broker.labels Labels for the broker-only headless service.\n      ##\n      labels: {}\n## External Access to Kafka brokers configuration\n##\nexternalAccess:\n  ## @param externalAccess.enabled Enable Kubernetes external cluster access to Kafka brokers\n  ##\n  enabled: false\n  ## External IPs auto-discovery configuration\n  ## An init container is used to auto-detect LB IPs or node ports by querying the K8s API\n  ## Note: RBAC might be required\n  ##\n  autoDiscovery:\n    ## @param externalAccess.autoDiscovery.enabled Enable using an init container to auto-detect external IPs/ports by querying the K8s API\n    ##\n    enabled: false\n    ## Bitnami Kubectl image\n    ## ref: https://hub.docker.com/r/bitnami/kubectl/tags/\n    ## @param externalAccess.autoDiscovery.image.registry [default: REGISTRY_NAME] Init container auto-discovery image registry\n    ## @param externalAccess.autoDiscovery.image.repository [default: REPOSITORY_NAME/kubectl] Init container auto-discovery image repository\n    ## @skip externalAccess.autoDiscovery.image.tag Init container auto-discovery image tag (immutable tags are recommended)\n    ## @param externalAccess.autoDiscovery.image.digest Kubectl image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n    ## @param externalAccess.autoDiscovery.image.pullPolicy Init container auto-discovery image pull policy\n    ## @param externalAccess.autoDiscovery.image.pullSecrets Init container auto-discovery image pull secrets\n    ##\n    image:\n      registry: docker.io\n      repository: bitnami/kubectl\n      tag: 1.31.1-debian-12-r2\n      digest: \"\"\n      ## Specify a imagePullPolicy\n      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images\n      ##\n      pullPolicy: IfNotPresent\n      ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)\n      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n      ## e.g:\n      ## pullSecrets:\n      ##   - myRegistryKeySecretName\n      ##\n      pullSecrets: []\n    ## Init Container resource requests and limits\n    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n    ## @param externalAccess.autoDiscovery.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if externalAccess.autoDiscovery.resources is set (externalAccess.autoDiscovery.resources is recommended for production).\n    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n    ##\n    resourcesPreset: \"nano\"\n    ## @param externalAccess.autoDiscovery.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)\n    ## Example:\n    ## resources:\n    ##   requests:\n    ##     cpu: 2\n    ##     memory: 512Mi\n    ##   limits:\n    ##     cpu: 3\n    ##     memory: 1024Mi\n    ##\n    resources: {}\n    ## Kafka provisioning containers' Security Context\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.enabled Enable Kafka auto-discovery containers' Security Context\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.runAsUser Set containers' Security Context runAsUser\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.runAsNonRoot Set Kafka auto-discovery containers' Security Context runAsNonRoot\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.allowPrivilegeEscalation Set Kafka auto-discovery containers' Security Context allowPrivilegeEscalation\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.readOnlyRootFilesystem Set Kafka auto-discovery containers' Security Context readOnlyRootFilesystem\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.capabilities.drop Set Kafka auto-discovery containers' Security Context capabilities to be dropped\n    ## @param externalAccess.autoDiscovery.containerSecurityContext.seccompProfile.type Set Kafka auto-discovery seccomp profile type\n    ## e.g:\n    ##   containerSecurityContext:\n    ##     enabled: true\n    ##     capabilities:\n    ##       drop: [\"NET_RAW\"]\n    ##     readOnlyRootFilesystem: true\n    ##\n    containerSecurityContext:\n      enabled: true\n      seLinuxOptions: {}\n      runAsUser: 1001\n      runAsGroup: 1001\n      runAsNonRoot: true\n      allowPrivilegeEscalation: false\n      readOnlyRootFilesystem: true\n      capabilities:\n        drop: [\"ALL\"]\n      seccompProfile:\n        type: \"RuntimeDefault\"\n  ## Service settings\n  controller:\n    ## @param externalAccess.controller.forceExpose If set to true, force exposing controller-eligible nodes although they are configured as controller-only nodes\n    ##\n    forceExpose: false\n    ## Parameters to configure K8s service(s) used to externally access Kafka brokers\n    ## Note: A new service per broker will be created\n    ##\n    service:\n      ## @param externalAccess.controller.service.type Kubernetes Service type for external access. It can be NodePort, LoadBalancer or ClusterIP\n      ##\n      type: LoadBalancer\n      ## @param externalAccess.controller.service.ports.external Kafka port used for external access when service type is LoadBalancer\n      ##\n      ports:\n        external: 9094\n      ## @param externalAccess.controller.service.loadBalancerClass Kubernetes Service Load Balancer class for external access when service type is LoadBalancer\n      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class\n      ##\n      loadBalancerClass: \"\"\n      ## @param externalAccess.controller.service.loadBalancerIPs Array of load balancer IPs for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## loadBalancerIPs:\n      ##   - X.X.X.X\n      ##   - Y.Y.Y.Y\n      ##\n      loadBalancerIPs: []\n      ## @param externalAccess.controller.service.loadBalancerNames Array of load balancer Names for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## loadBalancerNames:\n      ##   - broker1.external.example.com\n      ##   - broker2.external.example.com\n      ##\n      loadBalancerNames: []\n      ## @param externalAccess.controller.service.loadBalancerAnnotations Array of load balancer annotations for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## loadBalancerAnnotations:\n      ##   - external-dns.alpha.kubernetes.io/hostname: broker1.external.example.com.\n      ##   - external-dns.alpha.kubernetes.io/hostname: broker2.external.example.com.\n      ##\n      loadBalancerAnnotations: []\n      ## @param externalAccess.controller.service.loadBalancerSourceRanges Address(es) that are allowed when service is LoadBalancer\n      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n      ## e.g:\n      ## loadBalancerSourceRanges:\n      ## - 10.10.10.0/24\n      ##\n      loadBalancerSourceRanges: []\n      ## @param externalAccess.controller.service.allocateLoadBalancerNodePorts Whether to allocate node ports when service type is LoadBalancer\n      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation\n      ##\n      allocateLoadBalancerNodePorts: true\n      ## @param externalAccess.controller.service.nodePorts Array of node ports used for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## nodePorts:\n      ##   - 30001\n      ##   - 30002\n      ##\n      nodePorts: []\n      ## @param externalAccess.controller.service.externalIPs Use distinct service host IPs to configure Kafka external listener when service type is NodePort. Length must be the same as replicaCount\n      ## e.g:\n      ## externalIPs:\n      ##   - X.X.X.X\n      ##   - Y.Y.Y.Y\n      ##\n      externalIPs: []\n      ## @param externalAccess.controller.service.useHostIPs Use service host IPs to configure Kafka external listener when service type is NodePort\n      ##\n      useHostIPs: false\n      ## @param externalAccess.controller.service.usePodIPs using the MY_POD_IP address for external access.\n      ##\n      usePodIPs: false\n      ## @param externalAccess.controller.service.domain Domain or external ip used to configure Kafka external listener when service type is NodePort or ClusterIP\n      ## NodePort: If not specified, the container will try to get the kubernetes node external IP\n      ## ClusterIP: Must be specified, ingress IP or domain where tcp for external ports is configured\n      ##\n      domain: \"\"\n      ## @param externalAccess.controller.service.publishNotReadyAddresses Indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready\n      ## ref: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/\n      ##\n      publishNotReadyAddresses: false\n      ## @param externalAccess.controller.service.labels Service labels for external access\n      ##\n      labels: {}\n      ## @param externalAccess.controller.service.annotations Service annotations for external access\n      ##\n      annotations: {}\n      ## @param externalAccess.controller.service.extraPorts Extra ports to expose in the Kafka external service\n      ##\n      extraPorts: []\n  broker:\n    ## Parameters to configure K8s service(s) used to externally access Kafka brokers\n    ## Note: A new service per broker will be created\n    ##\n    service:\n      ## @param externalAccess.broker.service.type Kubernetes Service type for external access. It can be NodePort, LoadBalancer or ClusterIP\n      ##\n      type: LoadBalancer\n      ## @param externalAccess.broker.service.ports.external Kafka port used for external access when service type is LoadBalancer\n      ##\n      ports:\n        external: 9094\n      ## @param externalAccess.broker.service.loadBalancerClass Kubernetes Service Load Balancer class for external access when service type is LoadBalancer\n      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class\n      ##\n      loadBalancerClass: \"\"\n      ## @param externalAccess.broker.service.loadBalancerIPs Array of load balancer IPs for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## loadBalancerIPs:\n      ##   - X.X.X.X\n      ##   - Y.Y.Y.Y\n      ##\n      loadBalancerIPs: []\n      ## @param externalAccess.broker.service.loadBalancerNames Array of load balancer Names for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## loadBalancerNames:\n      ##   - broker1.external.example.com\n      ##   - broker2.external.example.com\n      ##\n      loadBalancerNames: []\n      ## @param externalAccess.broker.service.loadBalancerAnnotations Array of load balancer annotations for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## loadBalancerAnnotations:\n      ##   - external-dns.alpha.kubernetes.io/hostname: broker1.external.example.com.\n      ##   - external-dns.alpha.kubernetes.io/hostname: broker2.external.example.com.\n      ##\n      loadBalancerAnnotations: []\n      ## @param externalAccess.broker.service.loadBalancerSourceRanges Address(es) that are allowed when service is LoadBalancer\n      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n      ## e.g:\n      ## loadBalancerSourceRanges:\n      ## - 10.10.10.0/24\n      ##\n      loadBalancerSourceRanges: []\n      ## @param externalAccess.broker.service.allocateLoadBalancerNodePorts Whether to allocate node ports when service type is LoadBalancer\n      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation\n      ##\n      allocateLoadBalancerNodePorts: true\n      ## @param externalAccess.broker.service.nodePorts Array of node ports used for each Kafka broker. Length must be the same as replicaCount\n      ## e.g:\n      ## nodePorts:\n      ##   - 30001\n      ##   - 30002\n      ##\n      nodePorts: []\n      ## @param externalAccess.broker.service.externalIPs Use distinct service host IPs to configure Kafka external listener when service type is NodePort. Length must be the same as replicaCount\n      ## e.g:\n      ## externalIPs:\n      ##   - X.X.X.X\n      ##   - Y.Y.Y.Y\n      ##\n      externalIPs: []\n      ## @param externalAccess.broker.service.useHostIPs Use service host IPs to configure Kafka external listener when service type is NodePort\n      ##\n      useHostIPs: false\n      ## @param externalAccess.broker.service.usePodIPs using the MY_POD_IP address for external access.\n      ##\n      usePodIPs: false\n      ## @param externalAccess.broker.service.domain Domain or external ip used to configure Kafka external listener when service type is NodePort or ClusterIP\n      ## NodePort: If not specified, the container will try to get the kubernetes node external IP\n      ## ClusterIP: Must be specified, ingress IP or domain where tcp for external ports is configured\n      ##\n      domain: \"\"\n      ## @param externalAccess.broker.service.publishNotReadyAddresses Indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready\n      ## ref: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/\n      ##\n      publishNotReadyAddresses: false\n      ## @param externalAccess.broker.service.labels Service labels for external access\n      ##\n      labels: {}\n      ## @param externalAccess.broker.service.annotations Service annotations for external access\n      ##\n      annotations: {}\n      ## @param externalAccess.broker.service.extraPorts Extra ports to expose in the Kafka external service\n      ##\n      extraPorts: []\n## Network policies\n## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/\n##\nnetworkPolicy:\n  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created\n  ##\n  enabled: true\n  ## @param networkPolicy.allowExternal Don't require client label for connections\n  ## When set to false, only pods with the correct client label will have network access to the port Redis\u0026reg; is\n  ## listening on. When true, zookeeper accept connections from any source (with the correct destination port).\n  ##\n  allowExternal: true\n  ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.\n  ##\n  allowExternalEgress: true\n  ## @param networkPolicy.addExternalClientAccess Allow access from pods with client label set to \"true\". Ignored if `networkPolicy.allowExternal` is true.\n  ##\n  addExternalClientAccess: true\n  ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy\n  ## e.g:\n  ## extraIngress:\n  ##   - ports:\n  ##       - port: 1234\n  ##     from:\n  ##       - podSelector:\n  ##           - matchLabels:\n  ##               - role: frontend\n  ##       - podSelector:\n  ##           - matchExpressions:\n  ##               - key: role\n  ##                 operator: In\n  ##                 values:\n  ##                   - frontend\n  extraIngress: []\n  ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy\n  ## e.g:\n  ## extraEgress:\n  ##   - ports:\n  ##       - port: 1234\n  ##     to:\n  ##       - podSelector:\n  ##           - matchLabels:\n  ##               - role: frontend\n  ##       - podSelector:\n  ##           - matchExpressions:\n  ##               - key: role\n  ##                 operator: In\n  ##                 values:\n  ##                   - frontend\n  ##\n  extraEgress: []\n  ## @param networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `networkPolicy.allowExternal` is true.\n  ## e.g:\n  ## ingressPodMatchLabels:\n  ##   my-client: \"true\"\n  #\n  ingressPodMatchLabels: {}\n  ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.\n  ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.\n  ##\n  ingressNSMatchLabels: {}\n  ingressNSPodMatchLabels: {}\n## @section Volume Permissions parameters\n##\n\n## Init containers parameters:\n## volumePermissions: Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each node\n##\nvolumePermissions:\n  ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume\n  ##\n  enabled: false\n  ## @param volumePermissions.image.registry [default: REGISTRY_NAME] Init container volume-permissions image registry\n  ## @param volumePermissions.image.repository [default: REPOSITORY_NAME/os-shell] Init container volume-permissions image repository\n  ## @skip volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)\n  ## @param volumePermissions.image.digest Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy\n  ## @param volumePermissions.image.pullSecrets Init container volume-permissions image pull secrets\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/os-shell\n    tag: 12-debian-12-r30\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## Example:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## Init container resource requests and limits\n  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  ## @param volumePermissions.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if volumePermissions.resources is set (volumePermissions.resources is recommended for production).\n  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n  ##\n  resourcesPreset: \"nano\"\n  ## @param volumePermissions.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)\n  ## Example:\n  ## resources:\n  ##   requests:\n  ##     cpu: 2\n  ##     memory: 512Mi\n  ##   limits:\n  ##     cpu: 3\n  ##     memory: 1024Mi\n  ##\n  resources: {}\n  ## Init container' Security Context\n  ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser\n  ## and not the below volumePermissions.containerSecurityContext.runAsUser\n  ## @param volumePermissions.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container\n  ## @param volumePermissions.containerSecurityContext.runAsUser User ID for the init container\n  ##\n  containerSecurityContext:\n    seLinuxOptions: {}\n    runAsUser: 0\n## @section Other Parameters\n##\n\n## ServiceAccount for Kafka\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n##\nserviceAccount:\n  ## @param serviceAccount.create Enable creation of ServiceAccount for Kafka pods\n  ##\n  create: true\n  ## @param serviceAccount.name The name of the service account to use. If not set and `create` is `true`, a name is generated\n  ## If not set and create is true, a name is generated using the kafka.serviceAccountName template\n  ##\n  name: \"\"\n  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created\n  ## Can be set to false if pods using this serviceAccount do not need to use K8s API\n  ##\n  automountServiceAccountToken: false\n  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount\n  ##\n  annotations: {}\n## Role Based Access Control\n## ref: https://kubernetes.io/docs/admin/authorization/rbac/\n##\nrbac:\n  ## @param rbac.create Whether to create \u0026 use RBAC resources or not\n  ## binding Kafka ServiceAccount to a role\n  ## that allows Kafka pods querying the K8s API\n  ##\n  create: false\n## @section Metrics parameters\n##\n\n## Prometheus Exporters / Metrics\n##\nmetrics:\n  ## Prometheus JMX exporter: exposes the majority of Kafka metrics\n  ##\n  jmx:\n    ## @param metrics.jmx.enabled Whether or not to expose JMX metrics to Prometheus\n    ##\n    enabled: false\n    ## @param metrics.jmx.kafkaJmxPort JMX port where the exporter will collect metrics, exposed in the Kafka container.\n    ##\n    kafkaJmxPort: 5555\n    ## Bitnami JMX exporter image\n    ## ref: https://hub.docker.com/r/bitnami/jmx-exporter/tags/\n    ## @param metrics.jmx.image.registry [default: REGISTRY_NAME] JMX exporter image registry\n    ## @param metrics.jmx.image.repository [default: REPOSITORY_NAME/jmx-exporter] JMX exporter image repository\n    ## @skip metrics.jmx.image.tag JMX exporter image tag (immutable tags are recommended)\n    ## @param metrics.jmx.image.digest JMX exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n    ## @param metrics.jmx.image.pullPolicy JMX exporter image pull policy\n    ## @param metrics.jmx.image.pullSecrets Specify docker-registry secret names as an array\n    ##\n    image:\n      registry: docker.io\n      repository: bitnami/jmx-exporter\n      tag: 1.0.1-debian-12-r6\n      digest: \"\"\n      ## Specify a imagePullPolicy\n      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images\n      ##\n      pullPolicy: IfNotPresent\n      ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)\n      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n      ## e.g:\n      ## pullSecrets:\n      ##   - myRegistryKeySecretName\n      ##\n      pullSecrets: []\n    ## Prometheus JMX exporter containers' Security Context\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n    ## @param metrics.jmx.containerSecurityContext.enabled Enable Prometheus JMX exporter containers' Security Context\n    ## @param metrics.jmx.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container\n    ## @param metrics.jmx.containerSecurityContext.runAsUser Set containers' Security Context runAsUser\n    ## @param metrics.jmx.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup\n    ## @param metrics.jmx.containerSecurityContext.runAsNonRoot Set Prometheus JMX exporter containers' Security Context runAsNonRoot\n    ## @param metrics.jmx.containerSecurityContext.allowPrivilegeEscalation Set Prometheus JMX exporter containers' Security Context allowPrivilegeEscalation\n    ## @param metrics.jmx.containerSecurityContext.readOnlyRootFilesystem Set Prometheus JMX exporter containers' Security Context readOnlyRootFilesystem\n    ## @param metrics.jmx.containerSecurityContext.capabilities.drop Set Prometheus JMX exporter containers' Security Context capabilities to be dropped\n    ## e.g:\n    ##   containerSecurityContext:\n    ##     enabled: true\n    ##     capabilities:\n    ##       drop: [\"NET_RAW\"]\n    ##     readOnlyRootFilesystem: true\n    ##\n    containerSecurityContext:\n      enabled: true\n      seLinuxOptions: {}\n      runAsUser: 1001\n      runAsGroup: 1001\n      runAsNonRoot: true\n      allowPrivilegeEscalation: false\n      readOnlyRootFilesystem: true\n      capabilities:\n        drop: [\"ALL\"]\n    ## @param metrics.jmx.containerPorts.metrics Prometheus JMX exporter metrics container port\n    ##\n    containerPorts:\n      metrics: 5556\n    ## Prometheus JMX exporter resource requests and limits\n    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n    ## @param metrics.jmx.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if metrics.jmx.resources is set (metrics.jmx.resources is recommended for production).\n    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n    ##\n    resourcesPreset: \"micro\"\n    ## @param metrics.jmx.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)\n    ## Example:\n    ## resources:\n    ##   requests:\n    ##     cpu: 2\n    ##     memory: 512Mi\n    ##   limits:\n    ##     cpu: 3\n    ##     memory: 1024Mi\n    ##\n    resources: {}\n    ## Prometheus JMX exporter service configuration\n    ##\n    service:\n      ## @param metrics.jmx.service.ports.metrics Prometheus JMX exporter metrics service port\n      ##\n      ports:\n        metrics: 5556\n      ## @param metrics.jmx.service.clusterIP Static clusterIP or None for headless services\n      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address\n      ##\n      clusterIP: \"\"\n      ## @param metrics.jmx.service.sessionAffinity Control where client requests go, to the same pod or round-robin\n      ## Values: ClientIP or None\n      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/\n      ##\n      sessionAffinity: None\n      ## @param metrics.jmx.service.annotations [object] Annotations for the Prometheus JMX exporter service\n      ##\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"{{ .Values.metrics.jmx.service.ports.metrics }}\"\n        prometheus.io/path: \"/metrics\"\n    ## @param metrics.jmx.whitelistObjectNames Allows setting which JMX objects you want to expose to via JMX stats to JMX exporter\n    ## Only whitelisted values will be exposed via JMX exporter. They must also be exposed via Rules. To expose all metrics\n    ## (warning its crazy excessive and they aren't formatted in a prometheus style) (1) `whitelistObjectNames: []`\n    ## (2) commented out above `overrideConfig`.\n    ##\n    whitelistObjectNames:\n      - kafka.controller:*\n      - kafka.server:*\n      - java.lang:*\n      - kafka.network:*\n      - kafka.log:*\n    ## @param metrics.jmx.config [string] Configuration file for JMX exporter\n    ## Specify content for jmx-kafka-prometheus.yml. Evaluated as a template\n    ##\n    ## Credits to the incubator/kafka chart for the JMX configuration.\n    ## https://github.com/helm/charts/tree/master/incubator/kafka\n    ##\n    config: |-\n      jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:{{ .Values.metrics.jmx.kafkaJmxPort }}/jmxrmi\n      lowercaseOutputName: true\n      lowercaseOutputLabelNames: true\n      ssl: false\n      {{- if .Values.metrics.jmx.whitelistObjectNames }}\n      whitelistObjectNames: [\"{{ join \"\\\",\\\"\" .Values.metrics.jmx.whitelistObjectNames }}\"]\n      {{- end }}\n    ## @param metrics.jmx.existingConfigmap Name of existing ConfigMap with JMX exporter configuration\n    ## NOTE: This will override metrics.jmx.config\n    ##\n    existingConfigmap: \"\"\n    ## @param metrics.jmx.extraRules  Add extra rules to JMX exporter configuration\n    ## e.g:\n    ## extraRules: |-\n    ##  - pattern: kafka.server\u003ctype=socket-server-metrics, listener=(.+), networkProcessor=(.+)\u003e\u003c\u003e(connection-count)\n    ##    name: kafka_server_socket_server_metrics_$3\n    ##    labels:\n    ##      listener: $1\n    ##\n    extraRules: \"\"\n  ## Prometheus Operator ServiceMonitor configuration\n  ##\n  serviceMonitor:\n    ## @param metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (requires `metrics.jmx.enabled` to be `true`)\n    ##\n    enabled: false\n    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running\n    ##\n    namespace: \"\"\n    ## @param metrics.serviceMonitor.path Path where JMX exporter serves metrics\n    ##\n    path: /metrics\n    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    ##\n    interval: \"\"\n    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    ##\n    scrapeTimeout: \"\"\n    ## @param metrics.serviceMonitor.labels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus\n    ##\n    labels: {}\n    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels\n    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration\n    ##\n    selector: {}\n    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping\n    ##\n    relabelings: []\n    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion\n    ##\n    metricRelabelings: []\n    ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint\n    ##\n    honorLabels: false\n    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.\n    ##\n    jobLabel: \"\"\n  prometheusRule:\n    ## @param metrics.prometheusRule.enabled if `true`, creates a Prometheus Operator PrometheusRule (requires `metrics.jmx.enabled` to be `true`)\n    ##\n    enabled: false\n    ## @param metrics.prometheusRule.namespace Namespace in which Prometheus is running\n    ##\n    namespace: \"\"\n    ## @param metrics.prometheusRule.labels Additional labels that can be used so PrometheusRule will be discovered by Prometheus\n    ##\n    labels: {}\n    ## @param metrics.prometheusRule.groups Prometheus Rule Groups for Kafka\n    ##\n    groups: []\n\n## @section Kafka provisioning parameters\n##\n\n## Kafka provisioning\n##\nprovisioning:\n  ## @param provisioning.enabled Enable kafka provisioning Job\n  ##\n  enabled: true\n  ## @param provisioning.automountServiceAccountToken Mount Service Account token in pod\n  ##\n  automountServiceAccountToken: false\n  ## @param provisioning.numPartitions Default number of partitions for topics when unspecified\n  ##\n  numPartitions: 1\n  ## @param provisioning.replicationFactor Default replication factor for topics when unspecified\n  ##\n  replicationFactor: 1\n  ## @param provisioning.topics Kafka topics to provision\n  ## - name: topic-name\n  ##   partitions: 1\n  ##   replicationFactor: 1\n  ##   ## https://kafka.apache.org/documentation/#topicconfigs\n  ##   config:\n  ##     max.message.bytes: 64000\n  ##     flush.messages: 1\n  ##\n  topics: \n    - name: \"posts\"\n      partitions: 1\n      replicationFactor: 1\n    - name: \"blogs\"\n      partitions: 1\n      replicationFactor: 1\n  ## @param provisioning.nodeSelector Node labels for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n  ##\n  nodeSelector: {}\n  ## @param provisioning.tolerations Tolerations for pod assignment\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param provisioning.extraProvisioningCommands Extra commands to run to provision cluster resources\n  ## - echo \"Allow user to consume from any topic\"\n  ## - \u003e-\n  ##   /opt/bitnami/kafka/bin/kafka-acls.sh\n  ##   --bootstrap-server $KAFKA_SERVICE\n  ##   --command-config $CLIENT_CONF\n  ##   --add\n  ##   --allow-principal User:user\n  ##   --consumer --topic *\n  ## - \"/opt/bitnami/kafka/bin/kafka-acls.sh\n  ##      --bootstrap-server $KAFKA_SERVICE\n  ##      --command-config $CLIENT_CONF\n  ##      --list\"\n  ##\n  extraProvisioningCommands: []\n  ## @param provisioning.parallel Number of provisioning commands to run at the same time\n  ##\n  parallel: 1\n  ## @param provisioning.preScript Extra bash script to run before topic provisioning. $CLIENT_CONF is path to properties file with most needed configurations\n  ##\n  preScript: \"\"\n  ## @param provisioning.postScript Extra bash script to run after topic provisioning. $CLIENT_CONF is path to properties file with most needed configurations\n  ##\n  postScript: \"\"\n  ## Auth Configuration for kafka provisioning Job\n  ##\n  auth:\n    ## TLS configuration for kafka provisioning Job\n    ##\n    tls:\n      ## @param provisioning.auth.tls.type Format to use for TLS certificates. Allowed types: `JKS` and `PEM`.\n      ## Note: ignored if auth.tls.client.protocol different from one of these values: \"SSL\" \"SASL_SSL\"\n      ##\n      type: jks\n      ## @param provisioning.auth.tls.certificatesSecret Existing secret containing the TLS certificates for the Kafka provisioning Job.\n      ## When using 'jks' format for certificates, the secret should contain a truststore and a keystore.\n      ## When using 'pem' format for certificates, the secret should contain one of the following:\n      ## 1. A public CA certificate, a public certificate and one private key.\n      ## 2. A truststore and a keystore in PEM format\n      ## If caCert is set, option 1 will be taken, otherwise option 2.\n      ##\n      certificatesSecret: \"\"\n      ## @param provisioning.auth.tls.cert The secret key from the certificatesSecret if 'cert' key different from the default (tls.crt)\n      ##\n      cert: tls.crt\n      ## @param provisioning.auth.tls.key The secret key from the certificatesSecret if 'key' key different from the default (tls.key)\n      ##\n      key: tls.key\n      ## @param provisioning.auth.tls.caCert The secret key from the certificatesSecret if 'caCert' key different from the default (ca.crt)\n      ##\n      caCert: ca.crt\n      ## @param provisioning.auth.tls.keystore The secret key from the certificatesSecret if 'keystore' key different from the default (keystore.jks)\n      ##\n      keystore: keystore.jks\n      ## @param provisioning.auth.tls.truststore The secret key from the certificatesSecret if 'truststore' key different from the default (truststore.jks)\n      ##\n      truststore: truststore.jks\n      ## @param provisioning.auth.tls.passwordsSecret Name of the secret containing passwords to access the JKS files or PEM key when they are password-protected.\n      ## It should contain two keys called \"keystore-password\" and \"truststore-password\", or \"key-password\" if using a password-protected PEM key.\n      ##\n      passwordsSecret: \"\"\n      ## @param provisioning.auth.tls.keyPasswordSecretKey The secret key from the passwordsSecret if 'keyPasswordSecretKey' key different from the default (key-password)\n      ## Note: must not be used if `passwordsSecret` is not defined.\n      ##\n      keyPasswordSecretKey: key-password\n      ## @param provisioning.auth.tls.keystorePasswordSecretKey The secret key from the passwordsSecret if 'keystorePasswordSecretKey' key different from the default (keystore-password)\n      ## Note: must not be used if `passwordsSecret` is not defined.\n      ##\n      keystorePasswordSecretKey: keystore-password\n      ## @param provisioning.auth.tls.truststorePasswordSecretKey The secret key from the passwordsSecret if 'truststorePasswordSecretKey' key different from the default (truststore-password)\n      ## Note: must not be used if `passwordsSecret` is not defined.\n      ##\n      truststorePasswordSecretKey: truststore-password\n      ## @param provisioning.auth.tls.keyPassword Password to access the password-protected PEM key if necessary. Ignored if 'passwordsSecret' is provided.\n      ##\n      keyPassword: \"\"\n      ## @param provisioning.auth.tls.keystorePassword Password to access the JKS keystore. Ignored if 'passwordsSecret' is provided.\n      ##\n      keystorePassword: \"\"\n      ## @param provisioning.auth.tls.truststorePassword Password to access the JKS truststore. Ignored if 'passwordsSecret' is provided.\n      ##\n      truststorePassword: \"\"\n  ## @param provisioning.command Override provisioning container command\n  ##\n  command: []\n  ## @param provisioning.args Override provisioning container arguments\n  ##\n  args: []\n  ## @param provisioning.extraEnvVars Extra environment variables to add to the provisioning pod\n  ## e.g:\n  ## extraEnvVars:\n  ##   - name: KAFKA_CFG_BACKGROUND_THREADS\n  ##     value: \"10\"\n  ##\n  extraEnvVars: []\n  ## @param provisioning.extraEnvVarsCM ConfigMap with extra environment variables\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param provisioning.extraEnvVarsSecret Secret with extra environment variables\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param provisioning.podAnnotations Extra annotations for Kafka provisioning pods\n  ##\n  podAnnotations: {}\n  ## @param provisioning.podLabels Extra labels for Kafka provisioning pods\n  ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  ##\n  podLabels: {}\n  ## Kafka provisioning pods ServiceAccount\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n    ## @param provisioning.serviceAccount.create Enable creation of ServiceAccount for Kafka provisioning pods\n    ##\n    create: true\n    ## @param provisioning.serviceAccount.name The name of the service account to use. If not set and `create` is `true`, a name is generated\n    ## If not set and create is true, a name is generated using the provisioning.serviceAccount.name template\n    ##\n    name: \"\"\n    ## @param provisioning.serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created\n    ## Can be set to false if pods using this serviceAccount do not need to use K8s API\n    ##\n    automountServiceAccountToken: false\n  ## Kafka provisioning resource requests and limits\n  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n  ## @param provisioning.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if provisioning.resources is set (provisioning.resources is recommended for production).\n  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n  ##\n  resourcesPreset: \"micro\"\n  ## @param provisioning.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)\n  ## Example:\n  ## resources:\n  ##   requests:\n  ##     cpu: 2\n  ##     memory: 512Mi\n  ##   limits:\n  ##     cpu: 3\n  ##     memory: 1024Mi\n  ##\n  resources: {}\n  ## Kafka provisioning pods' Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param provisioning.podSecurityContext.enabled Enable security context for the pods\n  ## @param provisioning.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy\n  ## @param provisioning.podSecurityContext.sysctls Set kernel settings using the sysctl interface\n  ## @param provisioning.podSecurityContext.supplementalGroups Set filesystem extra groups\n  ## @param provisioning.podSecurityContext.fsGroup Set Kafka provisioning pod's Security Context fsGroup\n  ## @param provisioning.podSecurityContext.seccompProfile.type Set Kafka provisioning pod's Security Context seccomp profile\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroupChangePolicy: Always\n    sysctls: []\n    supplementalGroups: []\n    fsGroup: 1001\n    seccompProfile:\n      type: \"RuntimeDefault\"\n  ## Kafka provisioning containers' Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n  ## @param provisioning.containerSecurityContext.enabled Enable Kafka provisioning containers' Security Context\n  ## @param provisioning.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container\n  ## @param provisioning.containerSecurityContext.runAsUser Set containers' Security Context runAsUser\n  ## @param provisioning.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup\n  ## @param provisioning.containerSecurityContext.runAsNonRoot Set Kafka provisioning containers' Security Context runAsNonRoot\n  ## @param provisioning.containerSecurityContext.allowPrivilegeEscalation Set Kafka provisioning containers' Security Context allowPrivilegeEscalation\n  ## @param provisioning.containerSecurityContext.readOnlyRootFilesystem Set Kafka provisioning containers' Security Context readOnlyRootFilesystem\n  ## @param provisioning.containerSecurityContext.capabilities.drop Set Kafka provisioning containers' Security Context capabilities to be dropped\n  ## e.g:\n  ##   containerSecurityContext:\n  ##     enabled: true\n  ##     capabilities:\n  ##       drop: [\"NET_RAW\"]\n  ##     readOnlyRootFilesystem: true\n  ##\n  containerSecurityContext:\n    enabled: true\n    seLinuxOptions: {}\n    runAsUser: 1001\n    runAsGroup: 1001\n    runAsNonRoot: true\n    allowPrivilegeEscalation: false\n    readOnlyRootFilesystem: true\n    capabilities:\n      drop: [\"ALL\"]\n  ## @param provisioning.schedulerName Name of the k8s scheduler (other than default) for kafka provisioning\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param provisioning.enableServiceLinks Whether information about services should be injected into pod's environment variable\n  ## The environment variables injected by service links are not used, but can lead to slow kafka boot times or slow running of the scripts when there are many services in the current namespace.\n  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.\n  ##\n  enableServiceLinks: true\n  ## @param provisioning.extraVolumes Optionally specify extra list of additional volumes for the Kafka provisioning pod(s)\n  ## e.g:\n  ## extraVolumes:\n  ##   - name: kafka-jaas\n  ##     secret:\n  ##       secretName: kafka-jaas\n  ##\n  extraVolumes: []\n  ## @param provisioning.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Kafka provisioning container(s)\n  ## extraVolumeMounts:\n  ##   - name: kafka-jaas\n  ##     mountPath: /bitnami/kafka/config/kafka_jaas.conf\n  ##     subPath: kafka_jaas.conf\n  ##\n  extraVolumeMounts: []\n  ## @param provisioning.sidecars Add additional sidecar containers to the Kafka provisioning pod(s)\n  ## e.g:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param provisioning.initContainers Add additional Add init containers to the Kafka provisioning pod(s)\n  ## e.g:\n  ## initContainers:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  initContainers: []\n  ## @param provisioning.waitForKafka If true use an init container to wait until kafka is ready before starting provisioning\n  ##\n  waitForKafka: true\n  ## @param provisioning.useHelmHooks Flag to indicate usage of helm hooks\n  useHelmHooks: true\n## @section KRaft chart parameters\n\n## KRaft configuration\n## Kafka mode without Zookeeper. Kafka nodes can work as controllers in this mode.\n##\nkraft:\n  ## @param kraft.enabled Switch to enable or disable the KRaft mode for Kafka\n  ##\n  enabled: true\n  ## @param kraft.existingClusterIdSecret Name of the secret containing the cluster ID for the Kafka KRaft cluster. This is incompatible with the clusterId parameter. If both are set, the existingClusterIdSecret will be used\n  existingClusterIdSecret: \"\"\n  ## @param kraft.clusterId Kafka Kraft cluster ID. If not set, a random cluster ID will be generated the first time Kraft is initialized.\n  ## NOTE: Already initialized Kafka nodes will use cluster ID stored in their persisted storage.\n  ## If reusing existing PVCs or migrating from Zookeeper mode, make sure the cluster ID is set matching the stored cluster ID, otherwise new nodes will fail to join the cluster.\n  ## In case the cluster ID stored in the secret does not match the value stored in /bitnami/kafka/data/meta.properties, remove the secret and upgrade the chart setting the correct value.\n  ##\n  clusterId: \"\"\n  ## @param kraft.controllerQuorumVoters Override the Kafka controller quorum voters of the Kafka Kraft cluster. If not set, it will be automatically configured to use all controller-elegible nodes.\n  ##\n  controllerQuorumVoters: \"\"\n## @section ZooKeeper chart parameters\n##\n## @param zookeeperChrootPath Path which puts data under some path in the global ZooKeeper namespace\n## ref: https://kafka.apache.org/documentation/#brokerconfigs_zookeeper.connect\n##\nzookeeperChrootPath: \"\"\n## ZooKeeper chart configuration\n## https://github.com/bitnami/charts/blob/main/bitnami/zookeeper/values.yaml\n##\nzookeeper:\n  ## @param zookeeper.enabled Switch to enable or disable the ZooKeeper helm chart. Must be false if you use KRaft mode.\n  ##\n  enabled: false\n  ## @param zookeeper.replicaCount Number of ZooKeeper nodes\n  ##\n  replicaCount: 2\n  ## ZooKeeper authentication\n  ##\n  auth:\n    client:\n      ## @param zookeeper.auth.client.enabled Enable ZooKeeper auth\n      ##\n      enabled: false\n      ## @param zookeeper.auth.client.clientUser User that will use ZooKeeper client (zkCli.sh) to authenticate. Must exist in the serverUsers comma-separated list.\n      ##\n      clientUser: \"\"\n      ## @param zookeeper.auth.client.clientPassword Password that will use ZooKeeper client (zkCli.sh) to authenticate. Must exist in the serverPasswords comma-separated list.\n      ##\n      clientPassword: \"\"\n      ## @param zookeeper.auth.client.serverUsers Comma, semicolon or whitespace separated list of user to be created. Specify them as a string, for example: \"user1,user2,admin\"\n      ##\n      serverUsers: \"\"\n      ## @param zookeeper.auth.client.serverPasswords Comma, semicolon or whitespace separated list of passwords to assign to users when created. Specify them as a string, for example: \"pass4user1, pass4user2, pass4admin\"\n      ##\n      serverPasswords: \"\"\n  ## ZooKeeper Persistence parameters\n  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/\n  ## @param zookeeper.persistence.enabled Enable persistence on ZooKeeper using PVC(s)\n  ## @param zookeeper.persistence.storageClass Persistent Volume storage class\n  ## @param zookeeper.persistence.accessModes Persistent Volume access modes\n  ## @param zookeeper.persistence.size Persistent Volume size\n  ##\n  persistence:\n    enabled: true\n    storageClass: \"\"\n    accessModes:\n      - ReadWriteOnce\n    size: 8Gi\n## External Zookeeper Configuration\n##\nexternalZookeeper:\n  ## @param externalZookeeper.servers List of external zookeeper servers to use. Typically used in combination with 'zookeeperChrootPath'. Must be empty if you use KRaft mode.\n  ##\n  servers: []"
            ],
            "verify": false,
            "version": "30.1.6",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kafka_consumer",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./../../consumer/helm",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": true,
            "id": "kafka-consumer",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "kafka-consumer",
                "first_deployed": 1730056898,
                "last_deployed": 1730056898,
                "name": "kafka-consumer",
                "namespace": "default",
                "notes": "",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":true,\"maxReplicas\":10,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80,\"targetMemoryUtilizationPercentage\":80},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"Always\",\"repository\":\"thissaleh/consumer-image\",\"tag\":\"latest\"},\"imagePullSecrets\":[{\"name\":\"my-dockerhub-secret\"}],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"livenessProbe\":{\"exec\":{\"command\":[\"python\",\"/app/health_check.py\"]},\"failureThreshold\":10,\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":30},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"exec\":{\"command\":[\"python\",\"/app/health_check.py\"]},\"failureThreshold\":10,\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":30},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"serviceAccount\":{\"annotations\":{},\"automount\":true,\"create\":false,\"name\":\"\"},\"tolerations\":[],\"volumeMounts\":[],\"volumes\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "kafka-consumer",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "upgrade_install": null,
            "values": [
              "# Default values for helm.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n\n# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\nreplicaCount: 1\n\n# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/\nimage:\n  repository: thissaleh/consumer-image\n  # This sets the pull policy for images.\n  pullPolicy: Always\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: latest\n\n# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nimagePullSecrets: \n  - name: my-dockerhub-secret\n# This is to override the chart name.\nnameOverride: \"\"\nfullnameOverride: \"\"\n\n# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: false\n  # Automatically mount a ServiceAccount's API credentials?\n  automount: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n# This is for setting Kubernetes Annotations to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\npodAnnotations: {}\n# This is for setting Kubernetes Labels to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\npodLabels: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\n# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/\n# service:\n#   # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n#   type: ClusterIP\n#   # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports\n#   port: 80\n\n# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/\ningress:\n  enabled: false\n  className: \"\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\nlivenessProbe:\n  exec:\n    command:\n      - python\n      - /app/health_check.py  # Adjust to the correct path if different\n  initialDelaySeconds: 30\n  periodSeconds: 60\n  timeoutSeconds: 30\n  failureThreshold: 10\n\nreadinessProbe:\n  exec:\n    command:\n      - python\n      - /app/health_check.py  # Adjust to the correct path if different\n  initialDelaySeconds: 30\n  periodSeconds: 60\n  timeoutSeconds: 30\n  failureThreshold: 10    \n\n# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/\nautoscaling:\n  enabled: true\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 80\n  targetMemoryUtilizationPercentage: 80\n\n# Additional volumes on the output Deployment definition.\nvolumes: []\n# - name: foo\n#   secret:\n#     secretName: mysecret\n#     optional: false\n\n# Additional volumeMounts on the output Deployment definition.\nvolumeMounts: []\n# - name: foo\n#   mountPath: \"/etc/foo\"\n#   readOnly: true\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kafka_producer",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./../../producer/helm",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": true,
            "id": "kafka-producer",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "helm",
                "first_deployed": 1730055683,
                "last_deployed": 1730055683,
                "name": "kafka-producer",
                "namespace": "default",
                "notes": "",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":true,\"maxReplicas\":10,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80,\"targetMemoryUtilizationPercentage\":80},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"Always\",\"repository\":\"thissaleh/producer-image\",\"tag\":\"latest\"},\"imagePullSecrets\":[{\"name\":\"my-dockerhub-secret\"}],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"livenessProbe\":{\"exec\":{\"command\":[\"python\",\"/app/health_check.py\"]},\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":30},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"exec\":{\"command\":[\"python\",\"/app/health_check.py\"]},\"failureThreshold\":10,\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":30},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"serviceAccount\":{\"annotations\":{},\"automount\":true,\"create\":false,\"name\":\"\"},\"tolerations\":[],\"volumeMounts\":[],\"volumes\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "kafka-producer",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "upgrade_install": null,
            "values": [
              "# Default values for helm.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\nreplicaCount: 1\n\n# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/\nimage:\n  repository: thissaleh/producer-image\n  # This sets the pull policy for images.\n  pullPolicy: Always\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: latest\n\n# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nimagePullSecrets: \n  - name: my-dockerhub-secret\n# This is to override the chart name.\nnameOverride: \"\"\nfullnameOverride: \"\"\n\n# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: false\n  # Automatically mount a ServiceAccount's API credentials?\n  automount: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n# This is for setting Kubernetes Annotations to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\npodAnnotations: {}\n# This is for setting Kubernetes Labels to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\npodLabels: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\n# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/\n# service:\n#   # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n#   type: ClusterIP\n#   # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports\n#   port: 80\n\n# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/\ningress:\n  enabled: false\n  className: \"\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n# values.yaml\n\nlivenessProbe:\n  exec:\n    command:\n      - python\n      - /app/health_check.py  # Adjust to the correct path if different\n  initialDelaySeconds: 30\n  periodSeconds: 60\n  timeoutSeconds: 30\n  failureThreshold: 6\n\nreadinessProbe:\n  exec:\n    command:\n      - python\n      - /app/health_check.py  # Adjust to the correct path if different\n  initialDelaySeconds: 30\n  periodSeconds: 60\n  timeoutSeconds: 30\n  failureThreshold: 10   \n\n# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/\nautoscaling:\n  enabled: true\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 80\n  targetMemoryUtilizationPercentage: 80\n\n# Additional volumes on the output Deployment definition.\nvolumes: []\n# - name: foo\n#   secret:\n#     secretName: mysecret\n#     optional: false\n\n# Additional volumeMounts on the output Deployment definition.\nvolumeMounts: []\n# - name: foo\n#   mountPath: \"/etc/foo\"\n#   readOnly: true\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_pod",
      "name": "kafka_client",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/kafka-client",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "kafka-client"
                },
                "name": "kafka-client",
                "namespace": "default",
                "resource_version": "2795",
                "uid": "d63658f2-572e-4882-9b4e-94259a341199"
              }
            ],
            "spec": [
              {
                "active_deadline_seconds": 0,
                "affinity": [],
                "automount_service_account_token": true,
                "container": [
                  {
                    "args": [],
                    "command": [
                      "sleep",
                      "infinity"
                    ],
                    "env": [],
                    "env_from": [],
                    "image": "docker.io/bitnami/kafka:3.8.0-debian-12-r5",
                    "image_pull_policy": "IfNotPresent",
                    "lifecycle": [],
                    "liveness_probe": [],
                    "name": "kafka-client",
                    "port": [],
                    "readiness_probe": [],
                    "resources": [
                      {
                        "limits": {
                          "cpu": "500m",
                          "memory": "512Mi"
                        },
                        "requests": {
                          "cpu": "500m",
                          "memory": "512Mi"
                        }
                      }
                    ],
                    "security_context": [],
                    "startup_probe": [],
                    "stdin": false,
                    "stdin_once": false,
                    "termination_message_path": "/dev/termination-log",
                    "termination_message_policy": "File",
                    "tty": false,
                    "volume_device": [],
                    "volume_mount": [],
                    "working_dir": ""
                  }
                ],
                "dns_config": [],
                "dns_policy": "ClusterFirst",
                "enable_service_links": true,
                "host_aliases": [],
                "host_ipc": false,
                "host_network": false,
                "host_pid": false,
                "hostname": "",
                "image_pull_secrets": [],
                "init_container": [],
                "node_name": "minikube",
                "node_selector": {},
                "os": [],
                "priority_class_name": "",
                "readiness_gate": [],
                "restart_policy": "Never",
                "runtime_class_name": "",
                "scheduler_name": "default-scheduler",
                "security_context": [],
                "service_account_name": "default",
                "share_process_namespace": false,
                "subdomain": "",
                "termination_grace_period_seconds": 30,
                "toleration": [],
                "topology_spread_constraint": [],
                "volume": []
              }
            ],
            "target_state": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "kafka_secret_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/kafka-secret-role",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "kafka-secret-role",
                "namespace": "default",
                "resource_version": "2752",
                "uid": "8aafb379-e757-46c4-942c-64e5259473e3"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "secrets"
                ],
                "verbs": [
                  "get"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_role_binding",
      "name": "kafka_secret_role_binding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/kafka-secret-role-binding",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "kafka-secret-role-binding",
                "namespace": "default",
                "resource_version": "2753",
                "uid": "38b95802-e32f-4043-b540-f31beca4a015"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kafka-secret-role"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "default",
                "namespace": "default"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "dockerhub_secret",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              ".dockerconfigjson": "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"dGhpc3NhbGVoOmRja3JfcGF0X1VFNjlKaENVczhPOGxsbEFlZzZFTGRNbkh3cw==\",\"email\":\"thissaleh@gmail.com\",\"password\":\"dckr_pat_UE69JhCUs8O8lllAeg6ELdMnHws\",\"username\":\"thissaleh\"}}}"
            },
            "id": "default/my-dockerhub-secret",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "my-dockerhub-secret",
                "namespace": "default",
                "resource_version": "2754",
                "uid": "9a22830a-7a7a-4063-8ba7-9c3412f22a50"
              }
            ],
            "timeouts": null,
            "type": "kubernetes.io/dockerconfigjson",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": ".dockerconfigjson",
                  "type": "string"
                }
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19"
        }
      ]
    }
  ],
  "check_results": null
}
