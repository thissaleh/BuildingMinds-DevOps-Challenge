name: Deploy to Azure AKS using Terraform

on:
  push:
    paths:
      - 'infra/terraform/**'
  pull_request:
    paths:
      - 'infra/terraform/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ secrets.AZURE_CLIENT_ID && secrets.AZURE_TENANT_ID && secrets.AZURE_SUBSCRIPTION_ID && secrets.AZURE_CLIENT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2 

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.9.8

      - name: Log in to Azure
        uses: azure/login@v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Initialize Terraform
        working-directory: infra/terraform
        run: terraform init

      - name: Apply Terraform Configuration
        working-directory: infra/terraform
        run: terraform apply -auto-approve

      - name: Configure kubectl
        env:
          AZURE_RESOURCE_GROUP: "<AKS-Resource-Group>"
          AZURE_AKS_CLUSTER_NAME: "<AKS-Cluster-Name>"
        run: |
          az aks get-credentials --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_AKS_CLUSTER_NAME
          kubectl get nodes  # test
